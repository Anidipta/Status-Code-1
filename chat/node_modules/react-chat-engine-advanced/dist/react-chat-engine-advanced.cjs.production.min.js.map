{"version":3,"file":"react-chat-engine-advanced.cjs.production.min.js","sources":["../src/actions/messages/getMessages.tsx","../src/actions/messages/newMessage.tsx","../src/actions/messages/readMessage.tsx","../src/actions/chats/getChat.tsx","../src/actions/chats/deleteChat.tsx","../src/actions/chats/getChatsBefore.tsx","../src/actions/chats/newChat.tsx","../src/actions/people/getPeopleToInvite.tsx","../src/actions/people/invitePerson.tsx","../src/actions/people/removePerson.tsx","../src/components/MultiChatWindow/styles.tsx","../src/components/MultiChatWindow/ChatList/styles.tsx","../src/components/MultiChatWindow/ChatList/ChatForm/styles.tsx","../src/components/Components/Button/styles.tsx","../src/components/Components/Button/index.tsx","../src/components/Components/Input/styles.tsx","../src/components/Components/Input/index.tsx","../src/components/MultiChatWindow/ChatList/ChatForm/index.tsx","../src/components/util/colorMapping.ts","../src/components/Components/Avatar/styles.tsx","../src/components/Components/Avatar/index.tsx","../src/components/MultiChatWindow/ChatList/ChatCard/styles.tsx","../src/components/MultiChatWindow/ChatList/ChatCard/index.tsx","../src/components/Components/RenderTrigger/styles.tsx","../src/components/Components/RenderTrigger/index.tsx","../src/components/util/dateTime.ts","../src/components/Components/Spinner/styles.tsx","../src/components/Components/Spinner/index.tsx","../src/components/MultiChatWindow/ChatList/index.tsx","../src/components/MultiChatWindow/ChatFeed/styles.tsx","../src/components/MultiChatWindow/ChatFeed/ChatHeader/styles.tsx","../src/components/MultiChatWindow/ChatFeed/ChatHeader/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/styles.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/Message/styles.tsx","../src/components/Components/Dot/styles.tsx","../src/components/Components/Dot/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/Message/DateTime/styles.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/Message/DateTime/index.tsx","../src/components/Components/File/styles.tsx","../src/components/util/file.tsx","../src/components/Components/File/index.tsx","../src/components/Components/Image/styles.tsx","../src/components/Components/Image/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/Message/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageList/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageForm/styles.tsx","../src/components/MultiChatWindow/ChatFeed/MessageForm/AttachmentInput/styles.tsx","../src/components/MultiChatWindow/ChatFeed/MessageForm/AttachmentInput/index.tsx","../src/components/MultiChatWindow/ChatFeed/MessageForm/index.tsx","../src/components/MultiChatWindow/ChatFeed/WelcomeGif/styles.tsx","../src/components/MultiChatWindow/ChatFeed/WelcomeGif/index.tsx","../src/components/MultiChatWindow/ChatFeed/index.tsx","../src/components/MultiChatWindow/ChatSettings/styles.tsx","../src/components/MultiChatWindow/ChatSettings/ChatAvatars/styles.tsx","../src/components/MultiChatWindow/ChatSettings/ChatAvatars/index.tsx","../src/components/MultiChatWindow/ChatSettings/PeopleSettings/styles.tsx","../src/components/Components/Autocomplete/styles.tsx","../src/components/Components/Autocomplete/index.tsx","../src/components/Components/Dropdown/styles.tsx","../src/components/Components/Dropdown/index.tsx","../src/components/MultiChatWindow/ChatSettings/PeopleSettings/index.tsx","../src/components/MultiChatWindow/ChatSettings/PhotosSettings/styles.tsx","../src/components/MultiChatWindow/ChatSettings/PhotosSettings/index.tsx","../src/components/MultiChatWindow/ChatSettings/OptionsSettings/styles.tsx","../src/components/MultiChatWindow/ChatSettings/OptionsSettings/index.tsx","../src/components/MultiChatWindow/ChatSettings/index.tsx","../src/components/MultiChatWindow/index.tsx","../src/sockets/SingleChatSocket/childSocket.tsx","../src/hooks/shared.ts","../src/hooks/useMultiChatLogic.tsx","../src/hooks/useSingleChatLogic.tsx","../src/sockets/MultiChatSocket/childSocket.tsx","../src/sockets/MultiChatSocket/index.tsx","../src/sockets/SingleChatSocket/index.tsx","../src/actions/chats/getOrCreateChat.tsx"],"sourcesContent":["import {\n  MessageObject,\n  UserAuthHeaders,\n  ChatAuthHeaders,\n} from '../../interfaces';\n\nimport axios from 'axios';\n\ntype GetMessages = (\n  host: string,\n  headers: UserAuthHeaders | ChatAuthHeaders,\n  chatId: number,\n  messageCount: number,\n  callback: (chatId: number, messages: MessageObject[]) => void\n) => void;\n\nexport const getMessages: GetMessages = (\n  host,\n  headers,\n  chatId,\n  messageCount,\n  callback\n) => {\n  axios\n    .get(`${host}/chats/${chatId}/messages/latest/${messageCount}/`, {\n      headers,\n    })\n    .then((response) => {\n      // props.onGetMessages && props.onGetMessages(chatId, response.data)\n      callback(chatId, response.data);\n    })\n    .catch((error) => {\n      console.log('Fetch Latest Messages Error', error);\n    });\n};\n","import _ from 'lodash';\nimport axios from 'axios';\n\nimport {\n  MessageObject,\n  ChatAuthHeaders,\n  UserAuthHeaders,\n} from '../../interfaces';\n\ntype NewMessage = (\n  host: string,\n  headers: UserAuthHeaders | ChatAuthHeaders,\n  chatId: number | undefined,\n  message: MessageObject,\n  callback: (message: MessageObject) => void\n) => void;\n\nexport const newMessage: NewMessage = (\n  host,\n  headers,\n  chatId,\n  message,\n  callback\n) => {\n  if (!chatId) return;\n\n  const formdata = new FormData();\n  if (message.attachments.length > 0) {\n    for (let i = 0; i < message.attachments.length; i++) {\n      formdata.append(\n        'attachments',\n        message.attachments[i].blob as Blob,\n        message.attachments[i].file as string\n      );\n    }\n  }\n  message.text !== null && formdata.append('text', message.text);\n  formdata.append('created', message.created);\n  formdata.append('sender_username', message.sender_username);\n  formdata.append('custom_json', JSON.stringify({}));\n\n  axios\n    .post(`${host}/chats/${chatId}/messages/`, formdata, { headers })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('New Message Error', error);\n    });\n};\n","import axios from 'axios';\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype ReadMessages = (\n  host: string,\n  headers: UserAuthHeaders,\n  chatId: number,\n  messageCount: number,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const readMessage: ReadMessages = (\n  host,\n  headers,\n  chatId,\n  messageId,\n  callback\n) => {\n  axios\n    .patch(\n      `${host}/chats/${chatId}/people/`,\n      { last_read: messageId },\n      { headers }\n    )\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Read Message Error', error);\n    });\n};\n","import axios from 'axios';\n\nimport { ChatObject, ChatAuthHeaders, UserAuthHeaders } from '../../interfaces';\n\ntype GetChat = (\n  host: string,\n  headers: UserAuthHeaders | ChatAuthHeaders,\n  chatId: number | string,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const getChat: GetChat = (host, headers, chatId, callback) => {\n  axios\n    .get(`${host}/chats/${chatId}/`, {\n      headers,\n    })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Get Chat Error', error);\n    });\n};\n","import axios from 'axios';\n\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype DeleteChat = (\n  host: string,\n  headers: UserAuthHeaders,\n  chatId: number | string,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const deleteChat: DeleteChat = (host, headers, chatId, callback) => {\n  axios\n    .delete(`${host}/chats/${chatId}/`, {\n      headers,\n    })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Delete Chat Error', error);\n    });\n};\n","import _ from 'lodash';\nimport axios from 'axios';\n\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype GetChatsBefore = (\n  host: string,\n  headers: UserAuthHeaders,\n  before: string,\n  chatCount: number,\n  callback: (chats: Array<ChatObject>) => void\n) => void;\n\nexport const getChatsBefore: GetChatsBefore = (\n  host,\n  headers,\n  before,\n  chatCount,\n  callback\n) => {\n  axios\n    .put(`${host}/chats/latest/${chatCount}/`, { before }, { headers })\n    .then((response) => {\n      // props.onGetChats && props.onGetChats(response.data);\n      callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Fetch Chats Before Error', error);\n    });\n};\n","import _ from 'lodash';\nimport axios from 'axios';\n\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype NewChat = (\n  host: string,\n  headers: UserAuthHeaders,\n  title: string | undefined,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const newChat: NewChat = (host, headers, title, callback) => {\n  if (!title) return;\n\n  axios\n    .post(`${host}/chats/`, { title }, { headers })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('New Chat Error', error);\n    });\n};\n","import axios from 'axios';\n\nimport { PersonObject, UserAuthHeaders } from '../../interfaces';\n\ntype GetPeopleToInvite = (\n  host: string,\n  headers: UserAuthHeaders,\n  chatId: number,\n  callback: (peopleToInvite: PersonObject[]) => void\n) => void;\n\nexport const getPeopleToInvite: GetPeopleToInvite = (\n  host,\n  headers,\n  chatId,\n  callback\n) => {\n  axios\n    .get(`${host}/chats/${chatId}/others/`, { headers })\n\n    .then((response) => {\n      // props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\n      callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Fetch People to Invite Error', error);\n    });\n};\n","import axios from 'axios';\n\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype InvitePerson = (\n  host: string,\n  headers: UserAuthHeaders,\n  chatId: number,\n  username: string,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const invitePerson: InvitePerson = (\n  host,\n  headers,\n  chatId,\n  username,\n  callback\n) => {\n  axios\n    .post(`${host}/chats/${chatId}/people/`, { username }, { headers })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Invite Person Error', error);\n    });\n};\n","import axios from 'axios';\n\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ntype RemovePerson = (\n  host: string,\n  headers: UserAuthHeaders,\n  chatId: number,\n  username: string,\n  callback: (chat: ChatObject) => void\n) => void;\n\nexport const removePerson: RemovePerson = (\n  host,\n  headers,\n  chatId,\n  username,\n  callback\n) => {\n  axios\n    .put(`${host}/chats/${chatId}/people/`, { username }, { headers })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Remove Person Error', error);\n    });\n};\n","export interface ChatEngineStyles {\n  style?: React.CSSProperties;\n  chatListColumnStyle?: React.CSSProperties;\n  chatFeedColumnStyle?: React.CSSProperties;\n  chatSettingsColumnStyle?: React.CSSProperties;\n  chatListMobileButtonStyle?: React.CSSProperties;\n  chatSettingsMobileButtonStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatEngineStyles = {\n  style: { position: 'relative', height: '100%' },\n  chatListColumnStyle: {\n    height: '100%',\n    overflowY: 'scroll',\n  },\n  chatFeedColumnStyle: {\n    height: '100%',\n    overflowY: 'scroll',\n    borderRight: '1px solid #afafaf',\n    borderLeft: '1px solid #afafaf',\n  },\n  chatSettingsColumnStyle: {\n    height: '100%',\n    overflowY: 'scroll',\n  },\n  chatListMobileButtonStyle: {\n    position: 'absolute',\n    top: '12px',\n    left: '12px',\n  },\n  chatSettingsMobileButtonStyle: {\n    position: 'absolute',\n    top: '12px',\n    right: '12px',\n  },\n};\n","export interface ChatListStyles {\n  style?: React.CSSProperties;\n  loadingMoreChatsStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatListStyles = {\n  style: {\n    width: '100%',\n    height: '100%',\n    maxHeight: '100vh',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: 'white',\n  },\n  loadingMoreChatsStyle: {\n    fontFamily: 'Avenir',\n    textAlign: 'center',\n    backgroundColor: '#e2e2e2',\n    margin: '4px',\n    paddingTop: '14px',\n    paddingBottom: '14px',\n    borderRadius: '4px',\n  },\n};\n","export interface ChatFormStyles {\n  style?: React.CSSProperties;\n  titleStyle?: React.CSSProperties;\n  inputStyle?: React.CSSProperties;\n  buttonStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatFormStyles = {\n  style: {\n    position: 'relative',\n    height: '64px',\n    width: '100%',\n    backgroundColor: 'white',\n  },\n  titleStyle: {\n    // Position\n    position: 'absolute',\n    top: '16px',\n    left: '14px',\n    // Size\n    fontSize: '26px',\n    // Style\n    fontFamily: 'Avenir',\n    fontWeight: 600,\n  },\n  inputStyle: {\n    // Position\n    position: 'absolute',\n    top: '15px',\n    left: '14px',\n    // Size\n    width: 'calc(100% - 28px)',\n  },\n  buttonStyle: {\n    // Position\n    position: 'absolute',\n    top: '15px',\n    right: '14px',\n    // Style\n    fontFamily: 'Avenir',\n    fontWeight: 600,\n  },\n};\n","export interface ButtonStyles {\n  style?: React.CSSProperties;\n  hoveredStyle?: React.CSSProperties;\n}\n\nexport const styles: ButtonStyles = {\n  style: {\n    fontFamily: 'Avenir',\n    color: '#1890ff',\n    border: '1px solid #1890ff',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: 'white',\n    transition: 'all .44s ease',\n    WebkitTransition: 'all .44s ease',\n    MozTransition: 'all .44s ease',\n  },\n  hoveredStyle: { opacity: '0.73' },\n};\n","import React, { useState } from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const Button = (props: Props) => {\n  const { type = 'default' } = props;\n\n  const [hovered, setHovered] = useState<boolean>(false);\n\n  const getTypeStyle = () => {\n    if (type == 'primary') {\n      return primaryStyle;\n    } else if (type === 'danger') {\n      return dangerStyle;\n    } else {\n      return {} as React.CSSProperties;\n    }\n  };\n\n  const typeStyle = getTypeStyle();\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={`ce-${type}-button ${props.className}`}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      style={{\n        // Default\n        ...styles.style,\n        ...typeStyle,\n        // State\n        ...(hovered ? styles.hoveredStyle : {}),\n        // Props\n        ...props.style,\n        // Props + State\n        ...(hovered ? props.hoveredStyle : {}),\n      }}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nconst primaryStyle = {\n  color: 'white',\n  border: 'none',\n  backgroundColor: '#1890ff',\n} as React.CSSProperties;\n\nconst dangerStyle = {\n  color: '#f5222d',\n  backgroundColor: 'white',\n  border: '1px solid #f5222d',\n} as React.CSSProperties;\n","export interface InputStyles {\n  style?: React.CSSProperties;\n  focusStyle?: React.CSSProperties;\n}\n\nexport const styles: InputStyles = {\n  style: {\n    fontFamily: 'Avenir',\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #d9d9d9',\n    padding: '0px 12px',\n    boxSizing: 'border-box',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  focusStyle: {\n    border: '1px solid #1890ff',\n  },\n};\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const Input = (props: Props) => {\n  const didMountRef = useRef<boolean>(false);\n  const [currentValue, setCurrentValue] = useState<string>('');\n  const [focused, setFocused] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n\n      if (props.defaultValue) {\n        const event = {\n          target: { value: currentValue },\n        } as React.ChangeEvent<HTMLInputElement>;\n        props.onChange && props.onChange(event);\n        setCurrentValue(props.defaultValue);\n      }\n    }\n  });\n\n  return (\n    <input\n      autoFocus={props.autoFocus}\n      className={`ce-input ce-text-input ${props.className}`}\n      placeholder={props.label}\n      value={typeof props.value === 'string' ? props.value : currentValue}\n      onChange={(e) => {\n        setCurrentValue(e.target.value);\n        props.onChange && props.onChange(e);\n      }}\n      onFocus={(e) => {\n        setFocused(true);\n        props.onFocus && props.onFocus(e);\n      }}\n      onBlur={(e) => {\n        setFocused(false);\n        props.onBlur && props.onBlur(e);\n      }}\n      style={{\n        ...styles.style,\n        ...(focused ? styles.focusStyle : {}),\n        ...props.style,\n        ...(focused ? props.focusStyle : {}),\n      }}\n    />\n  );\n};\n","import React, { useState } from 'react';\n\nimport { ChatFormProps } from './props';\nimport { styles } from './styles';\n\nimport { Button } from '../../../Components/Button';\nimport { Input } from '../../../Components/Input';\n\nexport const ChatForm: React.FC<ChatFormProps> = (props: ChatFormProps) => {\n  const [selected, setSelected] = useState<boolean>(false);\n  const [value, setValue] = useState<string>('');\n\n  const onSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    props.onFormSubmit && props.onFormSubmit(value);\n    setValue('');\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  if (props.renderChatForm) {\n    return <>{props.renderChatForm(props)}</>;\n  }\n\n  return (\n    <div\n      className=\"ce-chat-form\"\n      style={{\n        ...styles.style,\n        ...props.style,\n      }}\n    >\n      <span\n        className=\"ce-chat-form-title\"\n        style={{\n          ...styles.titleStyle,\n          ...props.titleStyle,\n        }}\n      >\n        My Chats\n      </span>\n\n      <Button\n        style={{\n          ...styles.buttonStyle,\n          ...props.buttonStyle,\n        }}\n        className=\"ce-chat-form-button\"\n        onClick={() => setSelected(true)}\n      >\n        +\n      </Button>\n\n      <form className=\"ce-chat-form-html-form\" onSubmit={onSubmit}>\n        <Input\n          autoFocus\n          value={value}\n          label=\"Chat Title\"\n          className=\"ce-chat-form-input\"\n          style={{\n            ...styles.inputStyle,\n            ...{ visibility: selected ? 'visible' : 'hidden' },\n            ...props.inputStyle,\n          }}\n          onChange={onChange}\n          onBlur={() => setSelected(false)}\n        />\n      </form>\n    </div>\n  );\n};\n","const colors = [\n  '#D64045',\n  '#5B3000',\n  '#00CC99',\n  '#467599',\n  '#1D3354',\n  '#8F250C',\n  '#6153CC',\n  '#961D4E',\n  '#A29F15',\n  '#0CAADC',\n  '#FF5154',\n  '#FA7921',\n  '#688E26',\n  '#550527',\n  '#A10702',\n  '#FF1053',\n  '#6C6EA0',\n  '#100B00',\n]\n\nconst stringToNumber = (str: string) => {\n  let sum = 0\n  for (var i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n  return sum\n}\n\nexport const stringToColor = (str: string | undefined) => {\n  if (!str) {\n    return 'black'\n  } else {\n    return colors[stringToNumber(str) % colors.length]\n  }\n}","export interface AvatarStyles {\n  style?: React.CSSProperties;\n  statusStyle?: React.CSSProperties;\n}\n\nexport const styles: AvatarStyles = {\n  style: {\n    // Position\n    position: 'relative',\n    // Size\n    width: '44px',\n    height: '44px',\n    // Style\n    borderRadius: '50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: '48px',\n    // Text Style\n    color: 'white',\n    textAlign: 'center',\n    fontFamily: 'Avenir',\n    fontSize: '15px',\n    lineHeight: '44px',\n    fontWeight: 600,\n  },\n  statusStyle: {\n    // Position\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    // Style\n    width: '8px',\n    height: '8px',\n    borderRadius: '100%',\n    border: '2px solid white',\n  },\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { stringToColor } from '../../util/colorMapping';\n\nimport { Props } from './props';\n\nimport { styles } from './styles';\n\nexport const Avatar = (props: Props) => {\n  // Save Copy of URL to avoid flickering\n  const [localAvatar, setLocalAvatar] = useState<string>('');\n  const { username = '', avatarUrl = '' } = props;\n\n  const text = username ? username.substring(0, 2).toUpperCase() : '';\n  const color = stringToColor(username);\n\n  useEffect(() => {\n    const newAvatar = avatarUrl !== null ? avatarUrl : '';\n    if (newAvatar.split('?')[0] !== localAvatar.split('?')[0]) {\n      setLocalAvatar(newAvatar);\n    }\n  });\n\n  const avatarUrlStyle = {\n    backgroundColor: localAvatar.length > 0 ? '#FFFFFF' : color,\n    backgroundImage: localAvatar.length > 0 && `url(${localAvatar})`,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`ce-avatar ${props.className}`}\n      onClick={props.onClick}\n      style={{\n        ...styles.style,\n        ...avatarUrlStyle,\n        ...props.style,\n      }}\n    >\n      {localAvatar.length === 0 && text}\n\n      <div\n        className=\"ce-avatar-status\"\n        style={{\n          ...styles.statusStyle,\n          ...{\n            display: props.isOnline === undefined ? 'none' : 'auto',\n            backgroundColor: props.isOnline ? '#52c41a' : '#f5222d',\n          },\n          ...props.statusStyle,\n        }}\n      />\n    </div>\n  );\n};\n","export interface ChatCardStyle {\n  style?: React.CSSProperties;\n  hoveredStyle?: React.CSSProperties;\n  activeStyle?: React.CSSProperties;\n  avatarStyle?: React.CSSProperties;\n  titleStyle?: React.CSSProperties;\n  notificationStyle?: React.CSSProperties;\n  subtitleStyle?: React.CSSProperties;\n  timeStampStyle?: React.CSSProperties;\n  loadingBarStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatCardStyle = {\n  style: {\n    position: 'relative',\n    height: '76px',\n    borderRadius: '12px',\n    cursor: 'pointer',\n    transition: 'all .44s ease',\n    WebkitTransition: 'all .44s ease',\n    MozTransition: 'all .44s ease',\n  },\n  hoveredStyle: {\n    backgroundColor: '#f5f5f5',\n    border: '0px solid white',\n  },\n  activeStyle: {\n    backgroundColor: '#d9d9d9',\n    border: '0px solid white',\n  },\n  avatarStyle: { position: 'absolute', top: '16px', left: '12px' },\n  titleStyle: {\n    // Position\n    position: 'absolute',\n    top: '12px',\n    left: '68px',\n    // Size\n    width: 'calc(100% - 68px - 32px)',\n    // Font\n    fontWeight: 500,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    fontFamily: 'Avenir',\n  },\n  notificationStyle: {\n    // Position\n    position: 'absolute',\n    top: 'calc(12px + 6px)',\n    right: '12px',\n    // Style\n    width: '12px',\n    height: '12px',\n    borderRadius: '6px',\n    backgroundColor: '#1890ff',\n    float: 'right',\n  },\n  subtitleStyle: {\n    // Position\n    position: 'absolute',\n    bottom: '12px',\n    left: '68px',\n    // Size\n    width: 'calc(70% - 68px)',\n    // Style\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    fontFamily: 'Avenir',\n  },\n  timeStampStyle: {\n    // Position\n    position: 'absolute',\n    bottom: '12px',\n    right: '12px',\n    // Size\n    width: '20%',\n    // Style\n    textAlign: 'right',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    fontFamily: 'Avenir',\n  },\n  loadingBarStyle: {\n    borderRadius: '4px',\n    backgroundColor: '#e2e2e2',\n    color: '#e2e2e2',\n  },\n};\n","import React, { useState } from 'react';\n\nimport { Avatar } from '../../../Components/Avatar';\n\nimport { stringToColor } from '../../../util/colorMapping';\n\nimport { ChatCardProps } from './props';\nimport { styles } from './styles';\n\nexport const ChatCard: React.FC<ChatCardProps> = (props: ChatCardProps) => {\n  const { title = '', description = '', timeStamp = '' } = props;\n\n  const [hovered, setHovered] = useState<boolean>(false);\n\n  const loadingBarStyle: React.CSSProperties = props.isLoading\n    ? { ...styles.loadingBarStyle, ...props.loadingBarStyle }\n    : {};\n\n  const hasNotificationStyle: React.CSSProperties = props.hasNotification\n    ? {}\n    : { display: 'none' };\n\n  if (props.renderChatCard) {\n    return <>{props.renderChatCard(props)}</>;\n  }\n\n  return (\n    <div\n      onClick={props.onClick}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      style={{\n        // Default\n        ...styles.style,\n        // State\n        ...(hovered ? styles.hoveredStyle : {}),\n        ...(props.isActive ? styles.activeStyle : {}),\n        // Props\n        ...props.style,\n        // Props + State\n        ...(hovered ? props.hoveredStyle : {}),\n        ...(props.isActive ? props.activeStyle : {}),\n      }}\n      className={`\n        ce-chat-card \n        ${props.isActive && 'ce-active-chat-card'} \n        ${hovered && 'ce-hovered-chat-card'}\n      `}\n    >\n      {props.renderAvatar ? (\n        props.renderAvatar(props)\n      ) : (\n        <Avatar\n          username={props.avatarUsername}\n          avatarUrl={props.avatarUrl}\n          className=\"ce-chat-card-avatar\"\n          style={{\n            ...styles.avatarStyle,\n            ...{\n              backgroundColor: props.isLoading\n                ? '#e2e2e2'\n                : stringToColor(props.avatarUsername),\n            },\n            ...props.avatarStyle,\n          }}\n        />\n      )}\n\n      <div\n        className={`ce-chat-card-title ${\n          props.isLoading && 'ce-chat-card-title-loading ce-chat-card-loading'\n        }`}\n        style={{\n          ...styles.titleStyle,\n          ...loadingBarStyle,\n          ...props.titleStyle,\n        }}\n        id={`ce-chat-card-title-${title}`}\n      >\n        {props.isLoading ? '.' : title}\n      </div>\n\n      <div\n        className={`ce-chat-card-unread ${\n          props.isLoading && 'ce-chat-card-unread-loading ce-chat-card-loading'\n        }`}\n        style={{\n          ...styles.notificationStyle,\n          ...hasNotificationStyle,\n          ...loadingBarStyle,\n          ...props.notificationStyle,\n        }}\n      />\n\n      <div\n        className={`ce-chat-card-subtitle ${\n          props.isLoading &&\n          'ce-chat-card-subtitle-loading ce-chat-card-loading'\n        }`}\n        style={{\n          ...styles.subtitleStyle,\n          ...loadingBarStyle,\n          ...props.subtitleStyle,\n        }}\n      >\n        <div\n          className={`ce-chat-card-subtitle-html ${\n            props.isLoading &&\n            'ce-chat-card-subtitle-html-loading ce-chat-card-loading'\n          }`}\n          dangerouslySetInnerHTML={{\n            __html: props.isLoading ? '.' : description,\n          }}\n        />\n        <style>{`p {margin-block-start: 0px; margin-block-end: 0px;}`}</style>\n      </div>\n\n      <div\n        className={`ce-chat-card-time-stamp ${\n          props.isLoading &&\n          'ce-chat-card-time-stamp-loading ce-chat-card-loading'\n        }`}\n        style={{\n          ...styles.timeStampStyle,\n          ...loadingBarStyle,\n          ...props.timeStampStyle,\n        }}\n      >\n        {props.isLoading ? '.' : timeStamp}\n      </div>\n    </div>\n  );\n};\n","export interface RenderTriggerStyles {\n  style?: React.CSSProperties;\n}\n\nexport const styles: RenderTriggerStyles = {\n  style: {\n    fontFamily: 'Avenir',\n  },\n};\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Props } from './props';\n\nimport { styles } from './styles';\n\nexport const RenderTrigger: React.FC<Props> = (props: Props) => {\n  const { children = 'Loading...' } = props;\n\n  const useOnScreen = (ref: React.RefObject<HTMLDivElement>) => {\n    const [isIntersecting, setIntersecting] = useState(false);\n\n    const observer = new IntersectionObserver(([entry]) => {\n      setIntersecting(entry.isIntersecting);\n      if (entry.isIntersecting) {\n        props.onShow && props.onShow();\n      } else {\n        props.onHide && props.onHide();\n      }\n    });\n\n    useEffect(() => {\n      observer.observe(ref.current as Element);\n      return () => observer.disconnect();\n    }, []);\n\n    return isIntersecting;\n  };\n\n  const ref = useRef<HTMLDivElement>(null);\n  ref !== null && useOnScreen(ref);\n\n  return (\n    <div\n      ref={ref}\n      style={{ ...styles.style, ...props.style }}\n      className=\"ce-chat-loader\"\n    >\n      {children}\n    </div>\n  );\n};\n","export const getDateTime = (date: string, timezoneOffset: number = 0) => {\n  date = date.replace(/ /g, 'T');\n\n  const year = date.substr(0, 4);\n  const month = date.substr(5, 2);\n  const day = date.substr(8, 2);\n  const hour = date.substr(11, 2);\n  const minute = date.substr(14, 2);\n  const second = date.substr(17, 2);\n\n  var d = new Date(`${year}-${month}-${day}T${hour}:${minute}:${second}`);\n  d.setHours(d.getHours() + timezoneOffset);\n  return d;\n};\n\nexport function formatTime(dateTime: Date) {\n  var time = dateTime.toLocaleString('en-US');\n  return time.split(' ')[1].slice(0, -3) + ' ' + time.slice(-2);\n}\n\nexport function formatDateTime(dateTime: Date) {\n  return dateTime.toLocaleString('en-US')\n}\n","export interface SpinnerStyles {\n  style?: React.CSSProperties;\n}\n\nexport const styles: SpinnerStyles = {\n  style: { width: '1em', height: '1em' },\n};\n","import React from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const Spinner: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 1024 1024\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n      className=\"ce-spinner\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <path d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\"></path>\n\n      <style>{`\n      .ce-spinner {\n        animation-name: spin;\n        animation-duration: 950ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear; \n      }\n      @keyframes spin {\n        from { transform:rotate(0deg); }\n        to { transform:rotate(360deg); }\n      }\n      `}</style>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { ChatListProps } from './props';\nimport { styles } from './styles';\n\nimport { ChatForm } from './ChatForm';\nimport { ChatCard } from './ChatCard';\n\nimport { RenderTrigger } from '../../Components/RenderTrigger';\n\nimport { ChatObject } from '../../../interfaces';\nimport { getDateTime } from '../../util/dateTime';\n\nimport { Spinner } from '../../Components/Spinner';\n\nconst readLastMessage = (username: string, chat: ChatObject) => {\n  return chat.people.some(\n    (chatPerson) =>\n      chatPerson.person.username === username &&\n      chatPerson.last_read === chat.last_message.id\n  );\n};\nconst renderLoading = () => {\n  return [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].map((_, i) => {\n    return <ChatCard key={`chat_${i}`} isLoading={true} />;\n  });\n};\n\nconst getDescription = (chat: ChatObject): string => {\n  if (!chat.last_message.id) {\n    return 'Say hello!';\n  }\n  if (chat.last_message.text === null) {\n    return `${chat.last_message.attachments.length} attachments`;\n  }\n  return chat.last_message.text;\n};\n\nexport const ChatList: React.FC<ChatListProps> = (props: ChatListProps) => {\n  const { activeChatId = -1 } = props;\n\n  const renderChats = (chats: Array<ChatObject>) => {\n    return chats.map((chat, index) => {\n      const otherPerson =\n        chat &&\n        chat.people.find((person) => person.person.username !== props.username);\n      const title = !chat\n        ? ''\n        : chat.is_direct_chat && otherPerson\n        ? otherPerson.person.username\n        : chat.title;\n      const timeStamp = getDateTime(chat.created, props.timezoneOffset)\n        .toString()\n        .substr(4, 6);\n      const hasNotification = props.username\n        ? !readLastMessage(props.username, chat)\n        : false;\n\n      return (\n        <ChatCard\n          key={`chat_${index}`}\n          chat={chat}\n          title={title}\n          description={getDescription(chat)}\n          timeStamp={timeStamp}\n          isActive={activeChatId === chat.id}\n          hasNotification={hasNotification}\n          onClick={() =>\n            props.onChatCardClick && props.onChatCardClick(chat.id)\n          }\n          avatarUsername={chat.last_message.sender?.username}\n          avatarUrl={\n            chat.last_message.sender\n              ? chat.last_message.sender.avatar\n              : 'https://chat-engine-assets.s3.amazonaws.com/empty-chat-thumb.png'\n          }\n          renderChatCard={props.renderChatCard}\n        />\n      );\n    });\n  };\n\n  if (props.renderChatList) {\n    return <>{props.renderChatList(props)}</>;\n  }\n\n  return (\n    <div\n      className=\"ce-chat-list\"\n      style={{\n        // Default\n        ...styles.style,\n        // State\n        ...(props.isLoading ? { overflowY: 'hidden' } : {}),\n        // Props\n        ...props.style,\n      }}\n    >\n      <ChatForm\n        onFormSubmit={props.onChatFormSubmit}\n        renderChatForm={props.renderChatForm}\n      />\n\n      {props.isLoading ? renderLoading() : renderChats(props.chats)}\n\n      {props.hasMoreChats && (\n        <RenderTrigger\n          onShow={props.onChatLoaderShow}\n          style={{\n            ...styles.loadingMoreChatsStyle,\n            ...props.loadingMoreChatsStyle,\n          }}\n          children={<Spinner />}\n        />\n      )}\n    </div>\n  );\n};\n","export interface ChatFeedStyles {\n  style?: React.CSSProperties;\n  chatHeaderStyle?: React.CSSProperties;\n  messageListStyle?: React.CSSProperties;\n  messageFormStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatFeedStyles = {\n  style: {\n    height: '100%',\n    position: 'relative',\n    backgroundColor: 'white',\n  },\n  chatHeaderStyle: {},\n  messageListStyle: {\n    height: 'calc(100% - 85px - 48px)',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    position: 'relative',\n    backgroundColor: 'white',\n  },\n  messageFormStyle: {\n    width: '100%',\n    position: 'absolute',\n    bottom: '0px',\n  },\n};\n","export interface ChatHeaderStyles {\n  style?: React.CSSProperties;\n  titleStyle?: React.CSSProperties;\n  subtitleStyle?: React.CSSProperties;\n  mobileOptionStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatHeaderStyles = {\n  style: {\n    width: '100%',\n    zIndex: 1,\n    backgroundColor: 'rgb(256, 256, 256, 0.92)',\n    padding: '18px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)',\n    overflowX: 'hidden',\n  },\n  titleStyle: {\n    width: '100%',\n    fontFamily: 'Avenir',\n    fontSize: '24px',\n    fontWeight: 600,\n  },\n  subtitleStyle: {\n    width: '100%',\n    fontFamily: 'Avenir',\n    fontSize: '12px',\n  },\n  mobileOptionStyle: {\n    width: '100%',\n    top: '32px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)',\n    overflow: 'hidden',\n  },\n};\n","import React from 'react';\n\nimport { ChatHeaderProps } from './props';\nimport { styles } from './styles';\n\nimport { Row, Col, setConfiguration } from 'react-grid-system';\n\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nexport const ChatHeader: React.FC<ChatHeaderProps> = (\n  props: ChatHeaderProps\n) => {\n  const { id = '', title = '', description = '' } = props;\n\n  if (props.renderChatHeader) {\n    return <>{props.renderChatHeader(props)}</>;\n  }\n\n  return (\n    <Row className=\"ce-chat-header\" style={{ ...styles.style, ...props.style }}>\n      <Col\n        xs={2}\n        sm={0}\n        className=\"ce-chat-header-mobile-option\"\n        style={{\n          ...styles.mobileOptionStyle,\n          ...{ left: '6px' },\n          ...props.mobileOptionStyle,\n        }}\n      ></Col>\n\n      <div\n        id={`ce-chat-feed-title-${id}`}\n        className=\"ce-chat-header-title\"\n        style={{\n          ...styles.titleStyle,\n          ...props.titleStyle,\n        }}\n      >\n        {title}\n      </div>\n\n      <div\n        className=\"ce-chat-header-subtitle\"\n        style={{\n          ...styles.subtitleStyle,\n          ...props.subtitleStyle,\n        }}\n      >\n        {description}\n      </div>\n\n      <Col\n        xs={2}\n        sm={0}\n        className=\"ce-chat-header-mobile-option\"\n        style={{\n          ...styles.mobileOptionStyle,\n          ...{ right: '6px' },\n          ...props.mobileOptionStyle,\n        }}\n      ></Col>\n    </Row>\n  );\n};\n","export interface MessageListStyles {\n  style?: React.CSSProperties;\n  messageStyle?: React.CSSProperties;\n}\n\nexport const styles: MessageListStyles = {\n  style: {},\n  messageStyle: {},\n};\n","export interface MessageStyle {\n  style?: React.CSSProperties;\n  dateTimeStyle?: React.CSSProperties;\n  senderUsernameStyle?: React.CSSProperties;\n  attachmentsStyle?: React.CSSProperties;\n  attachmentsImageStyle?: React.CSSProperties;\n  attachmentsFileStyle?: React.CSSProperties;\n  bodyStyle?: React.CSSProperties;\n  timeTagStyle?: React.CSSProperties;\n  bubbleStyle?: React.CSSProperties;\n  readsStyle?: React.CSSProperties;\n  readStyle?: React.CSSProperties;\n  avatarStyle?: React.CSSProperties;\n}\n\nexport const theirStyles: MessageStyle = {\n  style: { width: '100%', position: 'relative' },\n  senderUsernameStyle: {\n    width: 'calc(100% - 64px)',\n    fontFamily: 'Avenir',\n    paddingLeft: '62px',\n    paddingBottom: '2px',\n    color: 'rgba(0, 0, 0, .40)',\n    fontSize: '15px',\n  },\n  attachmentsStyle: {\n    display: 'auto',\n    paddingLeft: '48px',\n    width: 'calc(100% - 48px)',\n  },\n  bodyStyle: {\n    position: 'relative',\n    width: 'calc(100% - 2px)',\n  },\n  timeTagStyle: {\n    marginLeft: '4px',\n    fontSize: '14px',\n    fontFamily: 'Avenir',\n    color: 'rgba(0, 0, 0, 0.4)',\n    // CSS Transitions\n    transition: 'all .15s ease',\n    WebkitTransition: 'all .15s ease',\n    MozTransition: 'all .15s ease',\n  },\n  bubbleStyle: {\n    cursor: 'pointer',\n    display: 'inline-block',\n    color: 'black',\n    padding: '12px',\n    marginLeft: '48px',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#f1f0f0',\n    overflowWrap: 'anywhere',\n    maxWidth: 'calc(100% - 100px - 48px)',\n    // CSS Transitions\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  readsStyle: {\n    marginLeft: '48px',\n    width: 'calc(100% - 50px)',\n  },\n  readStyle: {\n    marginLeft: '4px',\n    float: 'left',\n  },\n  avatarStyle: {\n    position: 'absolute',\n    bottom: '0px',\n    left: '2px',\n  },\n};\n\nexport const myStyles: MessageStyle = {\n  style: {\n    width: '100%',\n    textAlign: 'right',\n  },\n  senderUsernameStyle: {\n    display: 'none',\n  },\n  attachmentsStyle: {\n    display: 'auto',\n    marginLeft: '48px',\n    width: 'calc(100% - 48px)',\n  },\n  bodyStyle: {\n    position: 'relative',\n    width: 'calc(100% - 2px)',\n  },\n  timeTagStyle: {\n    marginRight: '4px',\n    fontSize: '14px',\n    fontFamily: 'Avenir',\n    color: 'rgb(24, 144, 255)',\n    // CSS Transitions\n    transition: 'all .15s ease',\n    WebkitTransition: 'all .15s ease',\n    MozTransition: 'all .15s ease',\n  },\n  bubbleStyle: {\n    color: 'white',\n    display: 'inline-block',\n    backgroundColor: '#1890ff',\n    cursor: 'pointer',\n    textAlign: 'left',\n    // Stay right but render text\n    padding: '12px',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    whiteSpace: 'pre-line',\n    overflowWrap: 'anywhere',\n    maxWidth: 'calc(100% - 100px)',\n    // CSS Transitions\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  readsStyle: { width: '100%' },\n  readStyle: { float: 'right', marginLeft: '4px' },\n  avatarStyle: { display: 'none' },\n};\n","export interface DotStyles {\n  style?: React.CSSProperties;\n}\n\nexport const styles: DotStyles = {\n  style: {\n    borderRadius: '13px',\n    textAlign: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: '14px',\n    // CSS Transitions\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n};\n","import React, { useEffect, useState } from 'react';\nimport { stringToColor } from '../../util/colorMapping';\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const Dot = (props: Props) => {\n  const [localAvatar, setLocalAvatar] = useState<string>('');\n  const { username = '', isVisible = true, avatarUrl = '' } = props;\n\n  const color = stringToColor(username);\n\n  useEffect(() => {\n    const newAvatar = avatarUrl !== null ? avatarUrl : '';\n    if (newAvatar.split('?')[0] !== localAvatar.split('?')[0]) {\n      setLocalAvatar(newAvatar);\n    }\n  });\n\n  return (\n    <div\n      className=\"ce-avatar-dot\"\n      style={{\n        ...styles.style,\n        ...{\n          backgroundColor: localAvatar.length > 0 ? 'white' : color,\n          backgroundImage: localAvatar.length > 0 ? `url(${localAvatar})` : '',\n          width: isVisible ? '13px' : '0px',\n          height: isVisible ? '13px' : '0px',\n        },\n        ...props.style,\n      }}\n    />\n  );\n};\n","export interface DateTimeStyles {\n  style?: React.CSSProperties;\n}\n\nexport const styles: DateTimeStyles = {\n  style: {\n    width: '100%',\n    fontFamily: 'Avenir',\n    textAlign: 'center',\n    paddingTop: '4px',\n    paddingBottom: '10px',\n    fontSize: '15px',\n    color: 'rgba(0, 0, 0, .40)',\n  },\n};\n","import React from 'react';\n\nimport { DateTimeProps } from './props';\nimport { styles } from './styles';\n\nimport { formatDateTime, getDateTime } from '../../../../../util/dateTime';\n\nexport const DateTime: React.FC<DateTimeProps> = (props: DateTimeProps) => {\n  const { offset = 0 } = props;\n\n  return (\n    <div\n      className=\"ce-message-date-text\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      {formatDateTime(getDateTime(props.created, offset))}\n    </div>\n  );\n};\n","export interface FileStyles {\n  style?: React.CSSProperties;\n  hoveredStyle?: React.CSSProperties;\n}\n\nexport const styles: FileStyles = {\n  style: {\n    cursor: 'pointer',\n    fontFamily: 'Avenir',\n    padding: '12px',\n    borderRadius: '14px',\n    display: 'inline-block',\n    marginRight: '2px',\n    marginBottom: '4px',\n    color: '#434343',\n    backgroundColor: 'white',\n    border: '1px solid #434343',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  hoveredStyle: { border: '1px solid #1890ff' },\n};\n","const images = ['jpg', 'jpeg', 'png', 'gif', 'tiff'];\n\nexport const isImage = (fileName: string) => {\n  const dotSplit = fileName.split('.');\n  return (\n    dotSplit.length > 0 &&\n    images.indexOf(dotSplit[dotSplit.length - 1].toLowerCase()) !== -1\n  );\n};\n\nexport const getFileName = (fileUrl: string) => {\n  const slashSplit = fileUrl.split('/');\n  const nameAndHash = slashSplit[slashSplit.length - 1];\n  return nameAndHash.split('?')[0];\n};\n\nexport const isImageFromFilePath = (fileUrl: string) => {\n  return isImage(getFileName(fileUrl));\n};\n","import React, { useState } from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nimport { getFileName } from '../../util/file';\n\nconst urlOrLoading = (url: string | undefined) => {\n  return url ? getFileName(url) : 'Loading...';\n};\n\nexport const File: React.FC<Props> = (props: Props) => {\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n\n  return (\n    <div\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() =>\n        props.url && typeof window !== 'undefined' && window.open(props.url)\n      }\n      style={{\n        // Default\n        ...styles.style,\n        ...(!props.url ? { border: '1px solid grey' } : {}),\n        // State\n        ...(isHovered ? styles.hoveredStyle : {}),\n        // Props\n        ...props.style,\n        // Props + State\n        ...(isHovered ? props.hoveredStyle : {}),\n      }}\n      className={`ce-file ${props.className}`}\n    >\n      {props.fileName ? props.fileName : `📄 ${urlOrLoading(props.url)}`}\n    </div>\n  );\n};\n","export interface ImageStyles {\n  style?: React.CSSProperties;\n  hoveredStyle?: React.CSSProperties;\n}\n\nexport const styles: ImageStyles = {\n  style: {\n    cursor: 'pointer',\n    height: '30vw',\n    width: '30vw',\n    maxHeight: '200px',\n    maxWidth: '200px',\n    minHeight: '100px',\n    minWidth: '100px',\n    padding: '2px',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    backgroundColor: 'white',\n    border: '1px solid #434343',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  hoveredStyle: { border: '1px solid #1890ff' },\n};\n","import React, { useState } from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const Image: React.FC<Props> = (props: Props) => {\n  const { url } = props;\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const loadingUrl = 'https://chat-engine-assets.s3.amazonaws.com/loading.gif';\n\n  return (\n    <img\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      src={url ? url : loadingUrl}\n      alt={url ? url : loadingUrl}\n      onClick={() => url && typeof window !== 'undefined' && window.open(url)}\n      style={{\n        // Default\n        ...styles.style,\n        // State\n        ...(isHovered ? styles.hoveredStyle : {}),\n        // Props\n        ...props.style,\n        // Props + State\n        ...(isHovered ? props.hoveredStyle : {}),\n      }}\n      className={`ce-image ${props.className}`}\n    />\n  );\n};\n","import React, { useState } from 'react';\n\nimport { MessageProps } from './props';\nimport { myStyles, theirStyles } from './styles';\n\nimport { Dot } from '../../../../Components/Dot';\nimport { Avatar } from '../../../../Components/Avatar';\n\nimport { DateTime } from './DateTime';\n\nimport { File } from '../../../../Components/File';\nimport { Image } from '../../../../Components/Image';\n\nimport { isImage, getFileName } from '../../../../util/file';\nimport { formatTime, getDateTime } from '../../../../util/dateTime';\n\nexport const Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const {\n    lastMessage = null,\n    message,\n    nextMessage = null,\n    chat = null,\n    isSending = false,\n    isMyMessage = false,\n    showDateTime = false,\n  } = props;\n\n  const [hovered, setHovered] = useState<boolean>(false);\n\n  const styles = isMyMessage ? myStyles : theirStyles;\n\n  const topRadius =\n    !lastMessage || lastMessage.sender_username !== message.sender_username\n      ? '1.3em'\n      : '0.3em';\n  const bottomRadius =\n    !nextMessage || nextMessage.sender_username !== message.sender_username\n      ? '1.3em'\n      : '0.3em';\n  const borderStyle = {\n    borderRadius: isMyMessage\n      ? `1.3em ${topRadius} ${bottomRadius} 1.3em`\n      : `${topRadius} 1.3em 1.3em ${bottomRadius}`,\n  };\n  const sendingStyle = isSending ? { backgroundColor: '#40a9ff' } : {};\n  const isLastMessage =\n    !nextMessage || nextMessage.sender_username !== message.sender_username;\n\n  const paddingBottom =\n    !nextMessage || nextMessage.sender_username !== message.sender_username\n      ? '12px'\n      : '2px';\n\n  const text: string =\n    message.text !== null\n      ? message.text.replace(/<a /g, `<a style=\"color: 'white';\" `)\n      : '';\n\n  const renderAttachments = (renderImage: boolean) => {\n    const attachments =\n      message && message.attachments ? message.attachments : [];\n\n    return attachments.map((attachment, index) => {\n      const fileName = getFileName(attachment.file);\n\n      if (renderImage && isImage(fileName)) {\n        return (\n          <Image\n            key={`attachment_${index}`}\n            url={\n              attachment.file !== null && !props.isSending\n                ? attachment.file\n                : undefined\n            }\n            style={{\n              ...styles.attachmentsImageStyle,\n              ...props.attachmentsImageStyle,\n            }}\n            className=\"ce-message-image\"\n          />\n        );\n      } else if (!renderImage && !isImage(fileName)) {\n        return (\n          <File\n            key={`attachment_${index}`}\n            url={\n              attachment.file !== null && !props.isSending\n                ? attachment.file\n                : undefined\n            }\n            style={{\n              ...styles.attachmentsFileStyle,\n              ...props.attachmentsFileStyle,\n            }}\n            className=\"ce-message-file\"\n          />\n        );\n      } else {\n        return <div key={`attachment_${index}`} />;\n      }\n    });\n  };\n\n  const renderReads = () => {\n    const chatPeople = chat !== null ? chat.people : [];\n    return chatPeople.map((chatPerson, index) => {\n      return (\n        <Dot\n          key={`read_${index}`}\n          avatarUrl={chatPerson.person.avatar}\n          username={chatPerson.person.username}\n          isVisible={message.id === chatPerson.last_read}\n          style={{\n            ...styles.readStyle,\n            ...props.readStyle,\n          }}\n        />\n      );\n    });\n  };\n\n  if (props.renderMessage) {\n    return <>{props.renderMessage(props)}</>;\n  }\n\n  return (\n    <div\n      className={`ce-${isMyMessage ? 'my' : 'their'}-message`}\n      style={{\n        ...styles.style,\n        ...{ paddingBottom },\n        ...props.style,\n      }}\n    >\n      {showDateTime && (\n        <DateTime\n          created={message.created}\n          style={{\n            ...styles.dateTimeStyle,\n            ...props.dateTimeStyle,\n          }}\n        />\n      )}\n\n      {(lastMessage === null ||\n        lastMessage.sender_username !== message.sender_username) && (\n        <div\n          style={{\n            ...styles.senderUsernameStyle,\n            ...props.senderUsernameStyle,\n          }}\n          className={`ce-${\n            isMyMessage ? 'my' : 'their'\n          }-message-sender-username`}\n        >\n          {message.sender_username}\n        </div>\n      )}\n\n      <div\n        style={{\n          ...styles.attachmentsStyle,\n          ...props.attachmentsStyle,\n        }}\n        className={`\n          ce-${isMyMessage ? 'my' : 'their'}-message-attachments \n          ce-${isMyMessage ? 'my' : 'their'}-message-images\n        `}\n      >\n        {renderAttachments(true)}\n      </div>\n\n      <div\n        style={{\n          ...styles.attachmentsStyle,\n          ...props.attachmentsStyle,\n        }}\n        className={`\n            ce-${isMyMessage ? 'my' : 'their'}-message-attachments \n            ce-${isMyMessage ? 'my' : 'their'}-message-files\n          `}\n      >\n        {renderAttachments(false)}\n      </div>\n\n      {message.text !== null && (\n        <div\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          style={{\n            ...styles.bodyStyle,\n            ...props.bodyStyle,\n          }}\n        >\n          {isMyMessage && (\n            <span\n              className=\"ce-my-message-timestamp\"\n              style={{\n                ...styles.timeTagStyle,\n                ...{ opacity: hovered ? '1' : '0' },\n                ...props.timeTagStyle,\n              }}\n            >\n              {formatTime(\n                getDateTime(message.created, props.timezoneOffset) as Date\n              )}\n            </span>\n          )}\n\n          <div\n            className={`\n              ce-${isMyMessage ? 'my' : 'their'}-message-body\n              ${isSending && 'ce-my-message-sending-body'}\n            `}\n            style={{\n              ...styles.bubbleStyle,\n              ...borderStyle,\n              ...sendingStyle,\n              ...props.bubbleStyle,\n            }}\n            dangerouslySetInnerHTML={{ __html: text }}\n          />\n          <style>{`p {margin-block-start: 0px; margin-block-end: 0px;}`}</style>\n\n          {!isMyMessage && (\n            <span\n              className=\"ce-their-message-timestamp\"\n              style={{\n                ...styles.timeTagStyle,\n                ...{ opacity: hovered ? '1' : '0' },\n                ...props.timeTagStyle,\n              }}\n            >\n              {formatTime(\n                getDateTime(message.created, props.timezoneOffset) as Date\n              )}\n            </span>\n          )}\n\n          <Avatar\n            username={message.sender_username}\n            style={{\n              ...styles.avatarStyle,\n              ...(isLastMessage ? {} : { display: 'none' }),\n              ...props.avatarStyle,\n            }}\n            avatarUrl={\n              message.sender &&\n              message.sender !== null &&\n              message.sender.avatar !== null\n                ? message.sender.avatar\n                : undefined\n            }\n          />\n        </div>\n      )}\n\n      <div\n        style={{\n          ...styles.readsStyle,\n          ...props.readsStyle,\n        }}\n        className={`ce-${isMyMessage ? 'my' : 'their'}-reads-row`}\n      >\n        {renderReads()}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { MessageListProps } from './props';\nimport { styles } from './styles';\n\nimport { Message } from './Message';\n\nimport { RenderTrigger } from '../../../Components/RenderTrigger';\nimport { Spinner } from '../../../Components/Spinner';\n\nimport _ from 'lodash';\n\nexport const MessageList: React.FC<MessageListProps> = (\n  props: MessageListProps\n) => {\n  const { messages = [] } = props;\n\n  const messagesObject = _.mapKeys(messages, 'created');\n  const keys = Object.keys(messagesObject).sort();\n\n  const date = (date: string) => {\n    return date ? date.substr(0, 10) : null;\n  };\n\n  const renderMessages = (keys: Array<string>) => {\n    return keys.map((key, index) => {\n      const message = messagesObject[key];\n      const lastKey = index === 0 ? '' : keys[index - 1];\n      const nextKey: string = index === keys.length - 1 ? '' : keys[index + 1];\n\n      const lastDate = lastKey !== '' ? date(lastKey) : undefined;\n      const thisDate = key !== '' ? date(key) : undefined;\n\n      const showDateTime: boolean = !lastDate || lastDate !== thisDate;\n      const isMyMessage: boolean = props.username === message.sender_username;\n\n      return (\n        <div key={`message_${index}`} id={`ce-message-${message.id}`}>\n          {index === keys.length - 1 && (\n            <RenderTrigger\n              onShow={props.onBottomMessageShow}\n              onHide={props.onBottomMessageHide}\n              children=\"\"\n            />\n          )}\n\n          <Message\n            chat={props.chat}\n            message={message}\n            lastMessage={messagesObject[lastKey]}\n            nextMessage={messagesObject[nextKey]}\n            timezoneOffset={props.timezoneOffset}\n            isMyMessage={isMyMessage}\n            isSending={!message.id}\n            showDateTime={showDateTime}\n            renderMessage={props.renderMessage}\n            style={{ ...styles.messageStyle, ...props.messageStyle }}\n          />\n        </div>\n      );\n    });\n  };\n\n  if (props.renderMessageList) {\n    return <>{props.renderMessageList(props)}</>;\n  }\n\n  return (\n    // Used for scrolling\n    <div\n      className=\"ce-message-list\"\n      id={`ce-message-list-${props.chat?.id}`}\n      style={{ ...styles.style, ...props.style }}\n    >\n      {/* used for finding Feed Height */}\n      <div\n        className=\"ce-message-list-content\"\n        id={`ce-message-list-content-${props.chat?.id}`}\n      >\n        {props.hasMoreMessages && (\n          <RenderTrigger\n            onShow={props.onMessageLoaderShow}\n            onHide={props.onMessageLoaderHide}\n            children={\n              <Spinner\n                style={{\n                  position: 'relative',\n                  left: 'calc(50% - 0.625em)',\n                  width: '1.25em',\n                  height: '1.25em',\n                  font: 'red',\n                }}\n              />\n            }\n          />\n        )}\n\n        {renderMessages(keys)}\n      </div>\n    </div>\n  );\n};\n","export interface MessageFormStyles {\n  style?: React.CSSProperties;\n  inputStyle?: React.CSSProperties;\n  sendButtonStyle?: React.CSSProperties;\n  attachmentInputStyle?: React.CSSProperties;\n  attachmentInputIconStyle?: React.CSSProperties;\n  draftAttachmentStyle?: React.CSSProperties;\n  draftAttachmentRemoveStyle?: React.CSSProperties;\n  draftImageStyle?: React.CSSProperties;\n  draftFileStyle?: React.CSSProperties;\n}\n\nexport const styles: MessageFormStyles = {\n  style: {\n    paddingTop: '4px',\n  },\n  inputStyle: {\n    border: '1px solid white',\n    width: 'calc(100% - 24px - 116px)',\n    outline: 'none',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    resize: 'none',\n    overflowX: 'hidden',\n    // Tweak Position\n    position: 'relative',\n    top: '6px',\n  },\n  sendButtonStyle: {\n    cursor: 'pointer',\n    fontFamily: 'Avenir',\n    display: 'inline-block',\n    borderRadius: '8px',\n    padding: '6px 12px',\n    color: 'white',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n    // Tweak Position\n    position: 'relative',\n    bottom: '6px',\n  },\n  draftAttachmentStyle: {\n    padding: '6px',\n    display: 'inline-block',\n    position: 'relative',\n  },\n  draftAttachmentRemoveStyle: {\n    position: 'absolute',\n    top: '-6px',\n    right: '-6px',\n    width: '30px',\n    height: '30px',\n    color: '#40a9ff',\n    backgroundColor: 'white',\n    border: '1px solid rgb(67, 67, 67)',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n  },\n  draftImageStyle: {\n    padding: '6px',\n    height: '60px',\n    width: '60px',\n  },\n  draftFileStyle: {},\n};\n","export interface AttachmentInputStyles {\n  style?: React.CSSProperties;\n  iconStyle?: React.CSSProperties;\n}\n\nexport const styles: AttachmentInputStyles = {\n  style: {\n    height: '0px',\n    display: 'inline',\n    padding: '6px 12px',\n    position: 'relative',\n    bottom: '6px',\n  },\n  iconStyle: {\n    backgroundColor: 'white',\n    border: '1px solid white',\n    cursor: 'pointer',\n  },\n};\n","import React, { useState } from 'react';\n\nimport { Props } from './props';\nimport { styles } from './styles';\n\nexport const AttachmentInput: React.FC<Props> = (props: Props) => {\n  const [hovered, setHovered] = useState<boolean>(false);\n  const hoverStyle: React.CSSProperties = { color: hovered ? '#06c' : '#444' };\n\n  const onSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLInputElement;\n    const files = target.files;\n    props.onSelectFiles && props.onSelectFiles(files);\n  };\n\n  return (\n    <form\n      className=\"ce-attachment-input\"\n      encType=\"multipart/form-data\"\n      style={{\n        ...styles.style,\n        ...props.style,\n      }}\n    >\n      <label htmlFor=\"files\" id=\"ce-upload-document-button\">\n        <span\n          className=\"ce-attachment-icon\"\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          style={{\n            ...styles.iconStyle,\n            ...hoverStyle,\n            ...props.iconStyle,\n          }}\n          onClick={() => {}} // Prevents redirect in StorybookJS\n        >\n          📎\n        </span>\n      </label>\n\n      <input\n        multiple\n        id=\"files\"\n        style={{ visibility: 'hidden', height: '0px', width: '0px' }}\n        type=\"file\"\n        onChange={onSelect}\n      />\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { MessageFormProps } from './props';\nimport { styles } from './styles';\n\nimport { AttachmentInput } from './AttachmentInput';\n\nimport { File } from '../../../Components/File';\nimport { Image } from '../../../Components/Image';\n\nimport { isImage } from '../../../util/file';\nimport { MessageObject, AttachmentObject } from '../../../../interfaces';\n\nexport const MessageForm: React.FC<MessageFormProps> = (\n  props: MessageFormProps\n) => {\n  const { label = '' } = props;\n\n  const [iter, setIter] = useState(0); // Forces attachments update\n  const [value, setValue] = useState<string>('');\n  const [height, setHeight] = useState<number>(0);\n  const [buttonHover, setButtonHover] = useState<boolean>(false);\n  const [attachments, setAttachments] = useState<Array<File>>([]);\n\n  useEffect(() => resize(), []);\n\n  const resize = () => {\n    var textarea = document.getElementById('msg-textarea');\n    if (textarea !== null) {\n      textarea.style.height = '';\n      textarea.style.height = Math.min(textarea.scrollHeight, 150) + 'px';\n      setHeight(Math.min(textarea.scrollHeight, 150));\n    }\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n    props.onChange && props.onChange(e);\n    resize();\n  };\n\n  const onSubmit = () => {\n    const created = new Date()\n      .toISOString()\n      .replace('T', ' ')\n      .replace('Z', `${Math.floor(Math.random() * 1000)}+00:00`);\n    const localAttachments: AttachmentObject[] = attachments.map(\n      (attachment) => {\n        return {\n          id: -1,\n          created: new Date().toString(),\n          file: attachment.name,\n          blob: attachment,\n        };\n      }\n    );\n\n    const message: MessageObject = {\n      attachments: localAttachments,\n      text: value,\n      sender_username: props.username ? props.username : '',\n      custom_json: {},\n      created,\n    };\n\n    props.onSubmit && props.onSubmit(message);\n\n    setValue('');\n    setAttachments([]);\n    resize();\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (value.length > 0) {\n        onSubmit();\n      }\n    }\n  };\n\n  const onRemove = (index: number) => {\n    if (attachments && attachments !== null) {\n      const newAttachments = attachments;\n      newAttachments.splice(index, 1);\n      setAttachments(newAttachments);\n      setIter(iter + 1);\n    }\n  };\n\n  const renderAttachments = (renderImage: boolean) => {\n    if (!attachments || attachments === null) return <div />;\n\n    return Array.from(attachments).map((attachment, index) => {\n      const url = URL.createObjectURL(attachment);\n\n      return (\n        <span\n          key={`draft-${index}`}\n          className=\"ce-draft-attachment-wrapper\"\n          style={{\n            ...styles.draftAttachmentStyle,\n            ...props.draftAttachmentStyle,\n          }}\n        >\n          {renderImage && isImage(attachment.name) && (\n            <Image\n              url={url}\n              style={{ ...styles.draftImageStyle, ...props.draftImageStyle }}\n              className=\"ce-draft-image\"\n            />\n          )}\n\n          {!renderImage && !isImage(attachment.name) && (\n            <File\n              url={url}\n              fileName={`📄 ${attachment.name}`}\n              style={{ ...styles.draftFileStyle, ...props.draftFileStyle }}\n              className=\"ce-draft-file\"\n            />\n          )}\n\n          {((!renderImage && !isImage(attachment.name)) ||\n            (renderImage && isImage(attachment.name))) && (\n            <button\n              className=\"ce-message-attachment-remove-btn\"\n              onClick={() => onRemove(index)}\n              style={{\n                ...styles.draftAttachmentRemoveStyle,\n                ...props.draftAttachmentRemoveStyle,\n              }}\n            >\n              ❌\n            </button>\n          )}\n        </span>\n      );\n    });\n  };\n\n  if (props.renderMessageForm) {\n    return <>{props.renderMessageForm(props)}</>;\n  }\n\n  return (\n    <div\n      id=\"ce-message-form\"\n      style={{ ...styles.style, ...props.style }}\n      className=\"ce-message-form\"\n    >\n      <div className=\"ce-message-form-attachments-row\">\n        {renderAttachments(true)}\n      </div>\n\n      <div className=\"ce-message-form-attachments-row\">\n        {renderAttachments(false)}\n      </div>\n\n      <textarea\n        id=\"msg-textarea\"\n        className=\"ce-message-form-input\"\n        value={value}\n        placeholder={label}\n        rows={1}\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        style={{\n          ...styles.inputStyle,\n          ...{ overflowY: height === 150 ? 'scroll' : 'hidden' },\n          ...props.inputStyle,\n        }}\n      />\n\n      <AttachmentInput\n        onSelectFiles={(files) => {\n          files !== null && setAttachments(Array.from(files));\n        }}\n        style={{\n          ...styles.attachmentInputStyle,\n          ...props.attachmentInputStyle,\n        }}\n        iconStyle={{\n          ...styles.attachmentInputIconStyle,\n          ...props.attachmentInputIconStyle,\n        }}\n      />\n\n      <div\n        id=\"ce-send-message-button\"\n        onMouseEnter={() => setButtonHover(true)}\n        onMouseLeave={() => setButtonHover(false)}\n        onClick={onSubmit}\n        style={{\n          ...styles.sendButtonStyle,\n          ...{ backgroundColor: buttonHover ? '#40a9ff' : '#1890ff' },\n          ...props.sendButtonStyle,\n        }}\n      >\n        Send\n      </div>\n    </div>\n  );\n};\n","export interface WelcomeGifStyles {\n  style?: React.CSSProperties;\n  gifStyle?: React.CSSProperties;\n  textStyle?: React.CSSProperties;\n}\n\nexport const styles: WelcomeGifStyles = {\n  style: {\n    width: '100%',\n    textAlign: 'center',\n  },\n  gifStyle: { width: '50%', maxWidth: '200px' },\n  textStyle: {\n    color: '#afafaf',\n    fontWeight: 600,\n    fontSize: '14px',\n    fontFamily: 'Avenir',\n  },\n};\n","import React from 'react';\nimport { WelcomeGifProps } from './props';\nimport { styles } from './styles';\n\nexport const WelcomeGif: React.FC<WelcomeGifProps> = (\n  props: WelcomeGifProps\n) => {\n  if (props.renderWelcomeGif) {\n    return <>{props.renderWelcomeGif(props)}</>;\n  }\n  return (\n    <div\n      className=\"ce-ice-breaker-wrapper\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <img\n        className=\"ce-ice-breaker-gif\"\n        style={{ ...styles.gifStyle, ...props.gifStyle }}\n        src=\"https://chat-engine-assets.s3.amazonaws.com/welcome_gifs/peace.gif\"\n        alt=\"chat-engine-ice-breaker\"\n      />\n\n      <div\n        className=\"ce-ice-breaker-text\"\n        style={{ ...styles.textStyle, ...props.textStyle }}\n      >\n        No messages here yet...\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ChatFeedProps } from './props';\nimport { styles } from './styles';\n\nimport { ChatHeader } from './ChatHeader';\nimport { MessageList } from './MessageList';\nimport { MessageForm } from './MessageForm';\nimport { WelcomeGif } from './WelcomeGif';\n\nimport { getDateTime, formatDateTime } from '../../util/dateTime';\n\nimport { Spinner } from '../../Components/Spinner';\nimport { ChatObject } from '../../../interfaces';\n\nconst getDescription = (\n  chat: ChatObject | undefined,\n  timezoneOffset: number = 0\n) => {\n  if (!chat) {\n    return '⬅️ ⬅️ ⬅️';\n  } else if (\n    chat.last_message.created &&\n    chat.last_message.created.length > 0\n  ) {\n    const dateTime = getDateTime(chat.last_message.created, timezoneOffset);\n    const formattedDateTime = formatDateTime(dateTime);\n    return `Active ${formattedDateTime}`;\n  } else {\n    return 'Say hello!';\n  }\n};\n\nexport const ChatFeed: React.FC<ChatFeedProps> = (props: ChatFeedProps) => {\n  const { chat } = props;\n\n  const otherPerson =\n    chat &&\n    chat.people.find((person) => person.person.username !== props.username);\n\n  const title = props.isLoading ? (\n    <Spinner />\n  ) : !chat ? (\n    'Create a chat!'\n  ) : chat.is_direct_chat && otherPerson ? (\n    otherPerson.person.username\n  ) : (\n    chat.title\n  );\n\n  if (props.renderChatFeed) {\n    return <>{props.renderChatFeed(props)}</>;\n  }\n\n  return (\n    <div className=\"ce-chat-feed\" style={{ ...styles.style, ...props.style }}>\n      <ChatHeader\n        title={title}\n        description={\n          props.isLoading\n            ? 'Loading...'\n            : getDescription(chat, props.timezoneOffset)\n        }\n        renderChatHeader={props.renderChatHeader}\n        style={{\n          ...styles.chatHeaderStyle,\n          ...props.chatHeaderStyle,\n        }}\n      />\n\n      <MessageList\n        chat={chat}\n        messages={props.messages}\n        username={props.username}\n        timezoneOffset={props.timezoneOffset}\n        hasMoreMessages={props.hasMoreMessages}\n        onMessageLoaderShow={props.onMessageLoaderShow}\n        onMessageLoaderHide={props.onMessageLoaderHide}\n        onBottomMessageShow={props.onBottomMessageShow}\n        onBottomMessageHide={props.onBottomMessageHide}\n        renderMessageList={props.renderMessageList}\n        renderMessage={props.renderMessage}\n        style={{\n          ...styles.messageListStyle,\n          ...props.messageListStyle,\n        }}\n      />\n\n      {props.messages.length === 0 && !props.isLoading && (\n        <WelcomeGif\n          style={{\n            position: 'absolute',\n            top: 'calc(50% - 112px)',\n          }}\n        />\n      )}\n\n      <MessageForm\n        label=\"Send a message...\"\n        username={props.username}\n        onSubmit={props.onMessageFormSubmit}\n        renderMessageForm={props.renderMessageForm}\n        style={{\n          ...styles.messageFormStyle,\n          ...props.messageFormStyle,\n        }}\n      />\n    </div>\n  );\n};\n","export interface ChatSettingsStyles {\n  style?: React.CSSProperties;\n  chatTitleStyle?: React.CSSProperties;\n  peopleSettingsStyle?: React.CSSProperties;\n  photosSettingsStyle?: React.CSSProperties;\n  optionsSettingsStyle?: React.CSSProperties;\n}\n\nexport const styles: ChatSettingsStyles = {\n  style: { backgroundColor: 'white', width: '100%', height: '100%' },\n  chatTitleStyle: {\n    width: '100%',\n    textAlign: 'center',\n    fontFamily: 'Avenir',\n    fontSize: '18px',\n    fontWeight: 600,\n  },\n};\n","export interface AvatarsStyle {\n  avatarOne?: React.CSSProperties;\n  avatarTwo?: React.CSSProperties;\n  avatarThree?: React.CSSProperties;\n}\nexport interface ChatAvatarsStyle {\n  style?: React.CSSProperties;\n  oneAvatarStyle?: AvatarsStyle;\n  twoAvatarsStyle?: AvatarsStyle;\n  threeAvatarsStyle?: AvatarsStyle;\n}\n\nexport const styles: ChatAvatarsStyle = {\n  style: {\n    width: '100%',\n    paddingTop: '12px',\n    height: 'calc(44px + 14px)',\n  },\n  oneAvatarStyle: {\n    avatarOne: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 22px)',\n    },\n  },\n  twoAvatarsStyle: {\n    avatarOne: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 22px - 15px)',\n    },\n    avatarTwo: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 44px - 22px + 15px)',\n    },\n  },\n  threeAvatarsStyle: {\n    avatarOne: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 22px - 24px)',\n    },\n    avatarTwo: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 24px - 44px)',\n    },\n    avatarThree: {\n      float: 'left',\n      position: 'relative',\n      left: 'calc(50% - 22px - 44px - 44px + 24px)',\n    },\n  },\n};\n","import React from 'react';\n\nimport { ChatAvatarsProps } from './props';\nimport { styles, ChatAvatarsStyle, AvatarsStyle } from './styles';\n\nimport { Avatar } from '../../../Components/Avatar';\nimport { PersonObject } from '../../../../interfaces';\n\nexport const ChatAvatars: React.FC<ChatAvatarsProps> = (\n  props: ChatAvatarsProps\n) => {\n  const { users = [] } = props;\n\n  const getStyle = (\n    people: PersonObject[],\n    styles: ChatAvatarsStyle\n  ): AvatarsStyle => {\n    if (people.length === 1) {\n      return styles.oneAvatarStyle ? styles.oneAvatarStyle : {};\n    } else if (people.length === 2) {\n      return styles.twoAvatarsStyle ? styles.twoAvatarsStyle : {};\n    } else {\n      return styles.threeAvatarsStyle ? styles.threeAvatarsStyle : {};\n    }\n  };\n\n  const getPeopleToRender = (people: PersonObject[]): PersonObject[] => {\n    if (props.isDirectChat) {\n      const otherPerson = users.find(\n        (person) => person.username !== props.username\n      );\n      return otherPerson ? [otherPerson] : [];\n    }\n    return people.slice(0, 3);\n  };\n\n  const topPeople = getPeopleToRender(users);\n  const style = getStyle(users, styles);\n  const propsStyle = getStyle(users, props);\n\n  if (props.renderChatAvatars) {\n    return <>{props.renderChatAvatars(props)}</>;\n  }\n\n  return (\n    <div\n      className=\"ce-chat-avatars\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <Avatar\n        className=\"ce-chat-avatar-1\"\n        username={topPeople[0] ? topPeople[0].username : undefined}\n        avatarUrl={topPeople[0] ? topPeople[0].avatar : undefined}\n        style={{\n          ...style.avatarOne,\n          ...{ display: topPeople[0] ? 'inherit' : 'none' },\n          ...propsStyle.avatarOne,\n        }}\n      />\n\n      <Avatar\n        className=\"ce-chat-avatar-2\"\n        username={topPeople[1] ? topPeople[1].username : undefined}\n        avatarUrl={topPeople[1] ? topPeople[1].avatar : undefined}\n        style={{\n          ...style.avatarTwo,\n          ...{ display: topPeople[1] ? 'inherit' : 'none' },\n          ...propsStyle.avatarTwo,\n        }}\n      />\n\n      <Avatar\n        className=\"ce-chat-avatar-3\"\n        username={topPeople[2] ? topPeople[2].username : undefined}\n        avatarUrl={topPeople[2] ? topPeople[2].avatar : undefined}\n        style={{\n          ...style.avatarThree,\n          ...{ display: topPeople[2] ? 'inherit' : 'none' },\n          ...propsStyle.avatarThree,\n        }}\n      />\n    </div>\n  );\n};\n","export interface PeopleSettingsStyles {\n  style?: React.CSSProperties;\n  avatarStyle?: React.CSSProperties;\n  usernameStyle?: React.CSSProperties;\n  deleteButtonStyle?: React.CSSProperties;\n  optionStyle?: React.CSSProperties;\n  addMemberStyle?: React.CSSProperties;\n  addMemberInputStyle?: React.CSSProperties;\n}\n\nexport const styles: PeopleSettingsStyles = {\n  style: {},\n  avatarStyle: { position: 'absolute', left: '12px', top: '2px' },\n  usernameStyle: {\n    fontFamily: 'Avenir',\n    position: 'absolute',\n    left: '72px',\n    top: '12px',\n    width: 'calc(100% - 84px - 52px - 12px)',\n  },\n  deleteButtonStyle: { position: 'absolute', right: '12px', top: '8px' },\n  optionStyle: { fontFamily: 'Avenir', padding: '8px 12px', cursor: 'pointer' },\n  addMemberStyle: {\n    width: 'calc(100% - 12px - 12px)',\n    position: 'relative',\n    left: '12px',\n  },\n  addMemberInputStyle: { border: '1px solid rgb(24, 144, 255)' },\n};\n","export interface AutocompleteStyles {\n  style?: React.CSSProperties;\n  inputStyle?: React.CSSProperties;\n  closeStyle?: React.CSSProperties;\n  optionsStyle?: React.CSSProperties;\n}\n\nexport const styles: AutocompleteStyles = {\n  style: { position: 'relative' },\n  inputStyle: {\n    width: '100%',\n    height: '36px',\n    padding: '0px 12px',\n    boxSizing: 'border-box',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    outline: 'none',\n    borderRadius: '24px',\n  },\n  closeStyle: {\n    cursor: 'pointer',\n    position: 'absolute',\n    top: '5px',\n    right: '12px',\n  },\n  optionsStyle: { overflow: 'hidden' },\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { styles } from './styles';\nimport { Props } from './props';\n\nconst emptyEvent = {\n  target: { value: '' },\n} as React.ChangeEvent<HTMLInputElement>;\n\nconst getOptions = (\n  value: string,\n  options: Array<Object>,\n  maxVisibleOptions: number\n) => {\n  return options\n    .filter(\n      (option) =>\n        JSON.stringify(option).toLowerCase().indexOf(value.toLowerCase()) !== -1\n    )\n    .slice(0, maxVisibleOptions);\n};\n\nexport const Autocomplete: React.FC<Props> = (props: Props) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const didMountRef = useRef(false);\n  const [value, setValue] = useState<string>('');\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (\n      event.target !== null &&\n      ref &&\n      ref.current !== null &&\n      !ref.current.contains(event.target as Node)\n    ) {\n      setShowOptions(false);\n    }\n  };\n\n  const onChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    showOptions: boolean\n  ) => {\n    setValue(event.target.value);\n    setShowOptions(showOptions);\n    props.onChange && props.onChange(event);\n  };\n\n  const renderOptions = (value: string) => {\n    const max = props.maxVisibleOptions ? props.maxVisibleOptions : 3;\n    return getOptions(value, props.options, max).map((option, index) => {\n      return (\n        <div key={`option-${index}`}>\n          {props.renderOption ? props.renderOption(option) : option.toString()}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div\n      ref={ref}\n      className=\"ce-autocomplete\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <input\n        className=\"ce-autocomplete-input\"\n        value={value}\n        placeholder={props.label}\n        style={{ ...styles.inputStyle, ...props.inputStyle }}\n        onChange={(e) => onChange(e, true)}\n        onFocus={(e) => {\n          setShowOptions(true);\n          props.onFocus && props.onFocus(e);\n        }}\n      />\n\n      <div\n        className=\"ce-autocomplete-close\"\n        onClick={() => onChange(emptyEvent, true)}\n        style={{\n          ...styles.closeStyle,\n          ...{ display: value.length > 0 ? 'inline-block' : 'none' },\n          ...props.closeStyle,\n        }}\n      >\n        ❌\n      </div>\n\n      <div\n        style={{\n          ...styles.optionsStyle,\n          ...{ height: showOptions ? 'auto' : '0px' },\n          ...props.optionsStyle,\n        }}\n      >\n        {renderOptions(value)}\n      </div>\n    </div>\n  );\n};\n","export interface DropdownStyles {\n  style?: React.CSSProperties;\n  barStyle?: React.CSSProperties;\n  barHoveredStyle?: React.CSSProperties;\n  iconStyle?: React.CSSProperties;\n  bodyStyle?: React.CSSProperties;\n  bodyExpandedStyle?: React.CSSProperties;\n}\n\nexport const styles: DropdownStyles = {\n  style: { borderTop: '1px solid #f0f0f0' },\n  barStyle: {\n    position: 'relative',\n    cursor: 'pointer',\n    backgroundColor: 'white',\n    transition: 'all .33s ease',\n    WebkitTransition: 'all .33s ease',\n    MozTransition: 'all .33s ease',\n    fontFamily: 'Avenir',\n    fontSize: '17px',\n    padding: '12px',\n    fontWeight: 600,\n  },\n  barHoveredStyle: {\n    backgroundColor: '#f0f0f0',\n  },\n  iconStyle: {\n    position: 'absolute',\n    right: '12px',\n    bottom: '15px',\n    width: '1em',\n    height: '1em',\n    transition: `transform 100ms`,\n  },\n  bodyStyle: {\n    height: '0px',\n    overflow: 'hidden',\n    transition: 'all 1.33s ease',\n    WebkitTransition: 'all 1.33s ease',\n    MozTransition: 'all 1.33s ease',\n  },\n  bodyExpandedStyle: { height: 'auto' },\n};\n","import React, { useState } from 'react';\nimport { styles } from './styles';\nimport { Props } from './props';\n\nexport const Dropdown: React.FC<Props> = (props: Props) => {\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  return (\n    <div\n      id={props.id}\n      className={`ce-dropdown ${props.className}`}\n      style={{ ...styles.style, ...props.style }}\n    >\n      <div\n        className=\"ce-dropdown-label\"\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setHovered(false)}\n        onClick={() => setExpanded(!expanded)}\n        style={{\n          ...styles.barStyle,\n          ...(hovered && styles.barHoveredStyle),\n          ...props.barStyle,\n          ...(hovered && props.barHoveredStyle),\n        }}\n      >\n        {props.label}\n\n        <svg\n          className=\"ce-dropdown-icon\"\n          style={{\n            ...styles.iconStyle,\n            ...(expanded\n              ? { transform: `rotate(-90deg)` }\n              : { transform: `rotate(0deg)` }),\n            ...props.iconStyle,\n          }}\n          viewBox=\"64 64 896 896\"\n          focusable=\"false\"\n          data-icon=\"left\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path d=\"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\"></path>\n        </svg>\n      </div>\n\n      <div\n        className=\"ce-dropdown-children\"\n        style={{\n          ...styles.bodyStyle,\n          ...(expanded && styles.bodyExpandedStyle),\n          ...props.bodyStyle,\n          ...(expanded && props.bodyExpandedStyle),\n        }}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { PeopleSettingsProps } from './props';\nimport { styles } from './styles';\n\nimport { Avatar } from '../../../Components/Avatar';\nimport { Autocomplete } from '../../../Components/Autocomplete';\nimport { Button } from '../../../Components/Button';\nimport { Dropdown } from '../../../Components/Dropdown';\n\nimport { PersonObject, ChatPersonObject } from '../../../../interfaces';\n\nexport const PeopleSettings: React.FC<PeopleSettingsProps> = (\n  props: PeopleSettingsProps\n) => {\n  const { chat = { people: [] }, peopleToInvite = [] } = props;\n\n  const renderChatPeople = (chatPeople: Array<ChatPersonObject>) => {\n    return chatPeople.map((chatPerson, index) => {\n      const { person } = chatPerson;\n\n      return (\n        <div\n          key={`member-${index}`}\n          style={{ height: '52px', position: 'relative' }}\n        >\n          <Avatar\n            username={person.username}\n            avatarUrl={person.avatar}\n            isOnline={person.is_online}\n            style={{ ...styles.avatarStyle, ...props.avatarStyle }}\n          />\n\n          <div style={{ ...styles.usernameStyle, ...props.usernameStyle }}>\n            {person.username}\n          </div>\n\n          {props.canDelete && (\n            <Button\n              type=\"danger\"\n              className=\"ce-member-delete-button\"\n              onClick={() =>\n                props.onRemovePersonClick && props.onRemovePersonClick(person)\n              }\n              style={{\n                ...styles.deleteButtonStyle,\n                ...props.deleteButtonStyle,\n              }}\n            >\n              <svg\n                viewBox=\"64 64 896 896\"\n                focusable=\"false\"\n                data-icon=\"close\"\n                width=\"1em\"\n                height=\"1em\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path>\n              </svg>\n            </Button>\n          )}\n        </div>\n      );\n    });\n  };\n\n  const renderChatPeopleOption = (option: object) => {\n    const person = option as PersonObject;\n    const { onInvitePersonClick } = props;\n    return (\n      <div\n        className=\"ce-add-member-option\"\n        style={{ ...styles.optionStyle, ...props.optionStyle }}\n        onClick={() => onInvitePersonClick && onInvitePersonClick(person)}\n      >\n        {person.username}\n      </div>\n    );\n  };\n\n  if (props.renderPeopleSettings) {\n    return <>{props.renderPeopleSettings(props)}</>;\n  }\n\n  return (\n    <Dropdown\n      id=\"ce-settings-people-dropdown\"\n      label=\"Members\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      {renderChatPeople(chat.people)}\n\n      <Autocomplete\n        label=\"Add Member\"\n        options={peopleToInvite}\n        renderOption={renderChatPeopleOption}\n        style={{ ...styles.addMemberStyle, ...props.addMemberStyle }}\n        inputStyle={{\n          ...styles.addMemberInputStyle,\n          ...props.addMemberInputStyle,\n        }}\n      />\n    </Dropdown>\n  );\n};\n","export interface PhotosSettingsStyles {\n  style?: React.CSSProperties;\n  imageWrapperStyle?: React.CSSProperties;\n  imagePaddingStyle?: React.CSSProperties;\n  imageStyle?: React.CSSProperties;\n}\n\nexport const styles: PhotosSettingsStyles = {\n  style: {},\n  imageWrapperStyle: {\n    position: 'relative',\n    width: '33.3%',\n    display: 'inline-block',\n    cursor: 'pointer',\n  },\n  imagePaddingStyle: { paddingTop: '100%' },\n  imageStyle: {\n    top: '0px',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    objectFit: 'cover',\n    padding: '0px',\n    borderRadius: '0px',\n  },\n};\n","import React from 'react';\n\nimport { PhotosSettingsProps } from './props';\nimport { styles } from './styles';\n\nimport { Image } from '../../../Components/Image';\nimport { Dropdown } from '../../../Components/Dropdown';\nimport { AttachmentObject } from '../../../../interfaces';\nimport { isImage, getFileName } from '../../../util/file';\n\nexport const PhotosSettings: React.FC<PhotosSettingsProps> = (\n  props: PhotosSettingsProps\n) => {\n  const { chat = { attachments: [] } } = props;\n  const renderImages = (attachments: Array<AttachmentObject>) => {\n    return attachments.map((attachment, index) => {\n      const fileName = getFileName(attachment.file);\n      if (isImage(fileName)) {\n        return (\n          <div\n            key={`photo-${index}`}\n            style={{ ...styles.imageWrapperStyle, ...props.imageWrapperStyle }}\n          >\n            <div\n              style={{\n                ...styles.imagePaddingStyle,\n                ...props.imagePaddingStyle,\n              }}\n            />\n\n            <Image\n              key={`attachment_${index}`}\n              className=\"ce-settings-image\"\n              url={attachment.file !== null ? attachment.file : undefined}\n              style={{ ...styles.imageStyle, ...props.imageStyle }}\n            />\n          </div>\n        );\n      }\n      return <span key={`photo-${index}`} />;\n    });\n  };\n\n  if (props.renderPhotosSettings) {\n    return <>{props.renderPhotosSettings(props)}</>;\n  }\n\n  return (\n    <Dropdown\n      id=\"ce-settings-photos-dropdown\"\n      label=\"Photos\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      {renderImages(chat.attachments)}\n    </Dropdown>\n  );\n};\n","export interface OptionsSettingsStyles {\n  style?: React.CSSProperties;\n  deleteChatButtonStyle?: React.CSSProperties;\n}\n\nexport const styles: OptionsSettingsStyles = {\n  style: {},\n  deleteChatButtonStyle: {\n    width: 'calc(100% - 24px)',\n    position: 'relative',\n    left: '12px',\n  },\n};\n","import React from 'react';\n\nimport { OptionsSettingsProps } from './props';\nimport { styles } from './styles';\n\nimport { Button } from '../../../Components/Button';\nimport { Dropdown } from '../../../Components/Dropdown';\n\nexport const OptionsSettings: React.FC<OptionsSettingsProps> = (\n  props: OptionsSettingsProps\n) => {\n  if (props.renderOptionsSettings) {\n    return <>{props.renderOptionsSettings(props)}</>;\n  }\n\n  return (\n    <Dropdown\n      id=\"ce-settings-options-dropdown\"\n      label=\"Options\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <Button\n        type=\"danger\"\n        onClick={() =>\n          props.onDeleteChatClick &&\n          props.chat &&\n          props.onDeleteChatClick(props.chat)\n        }\n        style={{\n          ...styles.deleteChatButtonStyle,\n          ...props.deleteChatButtonStyle,\n        }}\n      >\n        Delete this Chat\n      </Button>\n    </Dropdown>\n  );\n};\n","import React from 'react';\n\nimport { ChatSettingsProps } from './props';\nimport { styles } from './styles';\n\nimport { ChatAvatars } from './ChatAvatars';\nimport { PeopleSettings } from './PeopleSettings';\nimport { PhotosSettings } from './PhotosSettings';\nimport { OptionsSettings } from './OptionsSettings';\n\nexport const ChatSettings: React.FC<ChatSettingsProps> = (\n  props: ChatSettingsProps\n) => {\n  const { chat } = props;\n\n  if (props.renderChatSettings) {\n    return <>{props.renderChatSettings(props)}</>;\n  }\n\n  const people = chat ? chat.people.map((chatPerson) => chatPerson.person) : [];\n\n  const otherPerson =\n    chat &&\n    chat.people.find((person) => person.person.username !== props.username);\n  const title =\n    props.isLoading || !chat\n      ? ''\n      : chat.is_direct_chat && otherPerson\n      ? otherPerson.person.username\n      : chat.title;\n\n  return (\n    <div\n      className=\"ce-chat-settings\"\n      style={{ ...styles.style, ...props.style }}\n    >\n      <ChatAvatars\n        users={people}\n        username={props.username}\n        renderChatAvatars={props.renderChatAvatars}\n      />\n\n      <div\n        className=\"ce-chat-settings-title\"\n        style={{ ...styles.chatTitleStyle, ...props.chatTitleStyle }}\n      >\n        {title}\n      </div>\n\n      <PeopleSettings\n        chat={chat}\n        peopleToInvite={props.peopleToInvite}\n        canDelete={chat && props.username === chat.admin.username}\n        onInvitePersonClick={props.onInvitePersonClick}\n        onRemovePersonClick={props.onRemovePersonClick}\n        renderPeopleSettings={props.renderPeopleSettings}\n        style={{ ...styles.peopleSettingsStyle, ...props.peopleSettingsStyle }}\n      />\n\n      <PhotosSettings\n        chat={chat}\n        renderPhotosSettings={props.renderPhotosSettings}\n        style={{ ...styles.photosSettingsStyle, ...props.photosSettingsStyle }}\n      />\n\n      <OptionsSettings\n        chat={chat}\n        onDeleteChatClick={props.onDeleteChatClick}\n        renderOptionsSettings={props.renderOptionsSettings}\n        style={{\n          ...styles.optionsSettingsStyle,\n          ...props.optionsSettingsStyle,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { MultiChatWindowProps } from './props';\nimport { styles } from './styles';\n\nimport { ChatList } from './ChatList';\nimport { ChatFeed } from './ChatFeed';\nimport { ChatSettings } from './ChatSettings';\nimport { ChatAvatars } from './ChatSettings/ChatAvatars';\nimport { ChatAvatarsProps } from './ChatSettings/ChatAvatars/props';\nimport { Button } from '../Components/Button';\n\nimport {\n  UnorderedListOutlined,\n  SettingOutlined,\n  CloseOutlined,\n} from '@ant-design/icons';\n\nimport { Row, Col } from 'react-grid-system';\nimport { setConfiguration } from 'react-grid-system';\n\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nexport const MultiChatWindow: React.FC<MultiChatWindowProps> = (\n  props: MultiChatWindowProps\n) => {\n  if (typeof window == 'undefined') return <div />;\n\n  const { chats = [], activeChatId = -1, messages = [] } = props;\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 575);\n  const chat = chats.find((chat) => chat.id === activeChatId);\n\n  useEffect(() => {\n    function handleResize() {\n      setIsMobile(window.innerWidth < 575);\n    }\n    window.addEventListener('resize', handleResize);\n  });\n\n  const renderChatList = () => {\n    return (\n      <ChatList\n        chats={chats}\n        activeChatId={activeChatId}\n        username={props.username}\n        timezoneOffset={props.timezoneOffset}\n        isLoading={props.isChatListLoading}\n        hasMoreChats={props.hasMoreChats}\n        onChatFormSubmit={props.onChatFormSubmit}\n        onChatCardClick={props.onChatCardClick}\n        onChatLoaderShow={props.onChatLoaderShow}\n        renderChatList={props.renderChatList}\n        renderChatForm={props.renderChatForm}\n        renderChatCard={props.renderChatCard}\n        style={{\n          position: isMobile ? 'absolute' : 'inherit',\n          zIndex: isMobile ? 1 : 'inherit',\n        }}\n      />\n    );\n  };\n\n  const renderChatSettings = () => {\n    return (\n      <ChatSettings\n        chat={chat}\n        username={props.username}\n        peopleToInvite={props.peopleToInvite}\n        isLoading={props.isChatSettingsLoading}\n        onInvitePersonClick={props.onInvitePersonClick}\n        onRemovePersonClick={props.onRemovePersonClick}\n        onDeleteChatClick={props.onDeleteChatClick}\n        renderChatSettings={props.renderChatSettings}\n        renderChatAvatars={(chatAvatarsProps) =>\n          (\n            <>\n              <ChatAvatars\n                {...chatAvatarsProps}\n                renderChatAvatars={props.renderChatAvatars}\n              />\n              {isMobile && (\n                <Button\n                  onClick={props.onCloseMobileChatSettingsClick}\n                  style={{ position: 'absolute', top: '12px', right: '12px' }}\n                >\n                  <CloseOutlined />\n                </Button>\n              )}\n            </>\n          ) as unknown as React.FC<ChatAvatarsProps>\n        }\n        renderPeopleSettings={props.renderPeopleSettings}\n        renderPhotosSettings={props.renderPhotosSettings}\n        renderOptionsSettings={props.renderOptionsSettings}\n        style={{\n          position: isMobile ? 'absolute' : 'inherit',\n          zIndex: isMobile ? 1 : 'inherit',\n        }}\n      />\n    );\n  };\n\n  return (\n    <Row className=\"ce-chat-engine\" style={{ ...styles.style, ...props.style }}>\n      <Col\n        xs={0}\n        sm={3}\n        className=\"ce-chat-list-column\"\n        style={{ ...styles.chatListColumnStyle, ...props.chatListColumnStyle }}\n      >\n        {renderChatList()}\n      </Col>\n\n      <Col\n        xs={12}\n        sm={6}\n        className=\"ce-chat-feed-column\"\n        style={{ ...styles.chatFeedColumnStyle, ...props.chatFeedColumnStyle }}\n      >\n        <ChatFeed\n          chat={chat}\n          messages={messages}\n          username={props.username}\n          timezoneOffset={props.timezoneOffset}\n          isLoading={props.isChatFeedLoading}\n          hasMoreMessages={props.hasMoreMessages}\n          onMessageLoaderShow={props.onMessageLoaderShow}\n          onMessageLoaderHide={props.onMessageLoaderHide}\n          onBottomMessageShow={props.onBottomMessageShow}\n          onBottomMessageHide={props.onBottomMessageHide}\n          onMessageFormSubmit={props.onMessageFormSubmit}\n          renderChatFeed={props.renderChatFeed}\n          renderChatHeader={props.renderChatHeader}\n          renderMessageList={props.renderMessageList}\n          renderMessage={props.renderMessage}\n          renderWelcomeGif={props.renderWelcomeGif}\n          renderMessageForm={props.renderMessageForm}\n        />\n      </Col>\n\n      <Col\n        xs={0}\n        sm={3}\n        className=\"ce-chat-settings-column\"\n        style={{\n          ...styles.chatSettingsColumnStyle,\n          ...props.chatSettingsColumnStyle,\n        }}\n      >\n        {renderChatSettings()}\n      </Col>\n\n      <Button\n        onClick={props.onMobileChatListClick}\n        className=\"ce-mobile-chat-list-button\"\n        style={{\n          ...styles.chatListMobileButtonStyle,\n          ...{ display: isMobile ? 'inherit' : 'none' },\n          ...props.chatListMobileButtonStyle,\n        }}\n      >\n        <UnorderedListOutlined />\n      </Button>\n\n      {isMobile && props.isMobileChatListOpen && renderChatList()}\n\n      <Button\n        onClick={props.onMobileChatSettingsClick}\n        className=\"ce-mobile-chat-settings-button\"\n        style={{\n          ...styles.chatSettingsMobileButtonStyle,\n          ...{ display: isMobile ? 'inherit' : 'none' },\n          ...props.chatSettingsMobileButtonStyle,\n        }}\n      >\n        <SettingOutlined />\n      </Button>\n\n      {isMobile && props.isMobileChatSettingsOpen && renderChatSettings()}\n    </Row>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Props } from './props';\n\nimport { WebSocket } from 'nextjs-websocket';\n\nlet socketRef: WebSocket = undefined;\nlet pingIntervalId: NodeJS.Timer;\nlet timeIntervalId: NodeJS.Timer;\n\nconst pingInterval = 4000;\nconst minLag = 15 * 1000;\n\nexport const ChildSocket: React.FC<Props> = (props: Props) => {\n  const [now, setNow] = useState(Date.now());\n  const [shouldPongBy, setShouldPongBy] = useState(Date.now() + minLag);\n\n  const { projectId, chatId, chatAccessKey } = props;\n\n  useEffect(() => {\n    if (now > shouldPongBy) {\n      props.onRefresh && props.onRefresh();\n      setShouldPongBy(Date.now() + minLag);\n    }\n  }, [now, shouldPongBy]);\n\n  useEffect(() => {\n    return () => {\n      clearInterval(pingIntervalId);\n      clearInterval(timeIntervalId);\n    };\n  }, []);\n\n  const onConnect = () => {\n    pingIntervalId = setInterval(() => {\n      try {\n        socketRef.sendMessage(JSON.stringify('ping'));\n      } catch (e) {\n        console.log('Ping error', e);\n      }\n    }, pingInterval);\n    timeIntervalId = setInterval(() => setNow(Date.now()), 1000);\n\n    props.onConnect && props.onConnect();\n  };\n\n  const onMessage = (event: string) => {\n    const eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'pong') {\n      setShouldPongBy(Date.now() + minLag);\n    } else if (eventJSON.action === 'login_error') {\n      console.log(\n        `Your chat auth credentials were not correct: \\n\n                Project ID: ${projectId} \\n\n                Chat ID: ${chatId} \\n\n                Chat Access Key: ${chatAccessKey}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n      );\n      props.onAuthFail && props.onAuthFail();\n    } else if (\n      eventJSON.action === 'edit_chat' ||\n      eventJSON.action === 'add_person' ||\n      eventJSON.action === 'remove_person'\n    ) {\n      props.onEditChat && props.onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      props.onDeleteChat && props.onDeleteChat(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      const { id, message } = eventJSON.data;\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      const { id, message } = eventJSON.data;\n      props.onEditMessage && props.onEditMessage(id, message);\n    } else if (eventJSON.action === 'delete_message') {\n      const { id, message } = eventJSON.data;\n      props.onDeleteMessage && props.onDeleteMessage(id, message);\n    } else if (eventJSON.action === 'is_typing') {\n      const { id, person } = eventJSON.data;\n      props.onIsTyping && props.onIsTyping(id, person);\n    }\n  };\n\n  const wsUrl = props.wsUrl ? props.wsUrl : 'wss://api.chatengine.io';\n\n  return (\n    <WebSocket\n      url={`${wsUrl}/chat/?projectID=${projectId}&chatID=${chatId}&accessKey=${chatAccessKey}`}\n      reconnect={true}\n      reconnectIntervalInMilliSeconds={3000}\n      childRef={(ref: WebSocket) => (socketRef = ref)}\n      onOpen={onConnect}\n      onError={props.onError}\n      onMessage={onMessage}\n      onClose={() => {\n        props.onClose && props.onClose();\n        props.onRefresh && props.onRefresh();\n      }}\n    />\n  );\n};\n","import { animateScroll } from 'react-scroll';\n\nexport const scrollToBottom = (duration: number, containerId: string) => {\n  if (document.getElementById(containerId)) {\n    animateScroll.scrollToBottom({\n      duration: duration,\n      containerId: containerId,\n    });\n  }\n};\n","import { useState, useEffect, useRef } from 'react';\n\nimport {\n  ChatObject,\n  MessageObject,\n  PersonObject,\n  UserAuthHeaders,\n} from '../interfaces';\nimport { getDateTime } from '../components/util/dateTime';\n\nimport {\n  getChatsBefore,\n  newChat,\n  deleteChat,\n  getPeopleToInvite,\n  invitePerson,\n  removePerson,\n  getMessages,\n  newMessage,\n  readMessage,\n} from '../actions';\n\nimport { animateScroll } from 'react-scroll';\nimport { scrollToBottom } from './shared';\n\nconst chatCountIterator = 20;\nconst messageCountIterator = 50;\n\nexport const sortChats = (chats: ChatObject[]) => {\n  return chats.sort((a: ChatObject, b: ChatObject) => {\n    const aDate =\n      a.last_message && a.last_message.created\n        ? getDateTime(a.last_message.created)\n        : getDateTime(a.created);\n    const bDate =\n      b.last_message && b.last_message.created\n        ? getDateTime(b.last_message.created)\n        : getDateTime(b.created);\n    return new Date(bDate).getTime() - new Date(aDate).getTime();\n  });\n};\n\nexport const sortMessages = (messages: MessageObject[]) => {\n  return messages.sort((a: MessageObject, b: MessageObject) => {\n    return new Date(b.created).getTime() - new Date(a.created).getTime();\n  });\n};\n\nexport const useMultiChatLogic = (\n  projectId: string,\n  username: string,\n  secret: string,\n  httpUrl?: string\n) => {\n  const host = httpUrl ? httpUrl : 'https://api.chatengine.io';\n  const headers: UserAuthHeaders = {\n    'Public-Key': projectId,\n    'User-Name': username,\n    'User-Secret': secret,\n  };\n\n  // Data\n  const [activeChatId, setActiveChatId] = useState<number | undefined>();\n  const [chats, setChats] = useState<ChatObject[]>([]);\n  const [messages, setMessages] = useState<MessageObject[]>([]);\n  const [peopleToInvite, setPeopleToInvite] = useState<PersonObject[]>([]);\n\n  // State\n  const [hasMoreChats, setHasMoreChats] = useState<boolean>(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState<boolean>(false);\n  const [isChatFeedAtBottom, setIsChatFeedAtBottom] = useState<boolean>(false);\n  const [isChatListLoading, setIsChatListLoading] = useState<boolean>(true);\n  const [isChatFeedLoading, setIsChatFeedLoading] = useState<boolean>(true);\n  const [isChatSettingsLoading, setIsChatSettingsLoading] =\n    useState<boolean>(true);\n  const [isMobileChatListOpen, setIsMobileChatListOpen] =\n    useState<boolean>(false);\n  const [isMobileChatSettingsOpen, setIsMobileChatSettingsOpen] =\n    useState<boolean>(false);\n\n  // Subscribe to Chat & Message Count\n  const chatCountRef = useRef<number>(0);\n  chatCountRef.current = chats.length;\n  const messageCountRef = useRef<number>(0);\n  messageCountRef.current = messages.length;\n  const chat = chats.find((chat) => chat.id === activeChatId);\n\n  // Fetch data on mount\n  const didMountRef = useRef<boolean>(false);\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      fetchMultiChatData();\n    }\n  }, []);\n\n  useEffect(() => {\n    const chat = chats.find((chat) => chat.id === activeChatId);\n    const chatPerson = chat?.people.find(\n      (chatPerson) => chatPerson.person.username === username\n    );\n\n    if (\n      activeChatId &&\n      chat?.last_message.id && // If there is a message\n      chat.last_message.id !== chatPerson?.last_read &&\n      isChatFeedAtBottom\n    ) {\n      readMessage(host, headers, activeChatId, chat.last_message.id, () => {});\n    }\n  }, [chats, activeChatId, isChatFeedAtBottom]);\n\n  async function fetchMultiChatData() {\n    const now = new Date()\n      .toISOString()\n      .replace('T', ' ')\n      .replace('Z', `${Math.floor(Math.random() * 1000)}+00:00`);\n\n    getChatsBefore(\n      host,\n      headers,\n      now,\n      chatCountRef.current > 0 ? chatCountRef.current : chatCountIterator,\n      (chats) => {\n        onGetChats(chats);\n\n        let currentChat = activeChatId;\n        if (!activeChatId && chats.length > 0) {\n          currentChat = chats[0].id;\n        }\n\n        currentChat\n          ? onChatCardClick(currentChat)\n          : setIsChatFeedLoading(false);\n      }\n    );\n    return;\n  }\n\n  async function onGetChats(chats: ChatObject[] = []) {\n    setHasMoreChats(chats.length >= chatCountRef.current + chatCountIterator);\n\n    const sortedChats = sortChats(chats);\n\n    setChats(sortedChats);\n    setIsChatListLoading(false);\n    return;\n  }\n\n  async function onNewChat(chat: ChatObject) {\n    const newChats = [chat].concat(chats ? chats : []);\n\n    setChats(newChats);\n    return;\n  }\n\n  async function onEditChat(newChat: ChatObject) {\n    const otherChats = chats\n      ? chats.filter((chat) => chat.id !== newChat.id)\n      : [];\n    const newChats = [newChat].concat(otherChats);\n    const sortedChats = sortChats(newChats);\n\n    setChats(sortedChats);\n    return;\n  }\n\n  async function onDeleteChat(oldChat: ChatObject) {\n    const newChats = chats\n      ? chats.filter((chat) => chat.id !== oldChat.id)\n      : [];\n\n    setChats(newChats);\n\n    if (newChats.length > 0 && activeChatId === oldChat.id)\n      onChatCardClick(newChats[0].id);\n    return;\n  }\n\n  async function onGetMessages(chatId: number, messages: MessageObject[]) {\n    setHasMoreMessages(\n      messages.length >= messageCountRef.current + messageCountIterator\n    );\n    setMessages(messages);\n\n    void chatId;\n    return;\n  }\n\n  async function onNewMessage(chatId: number, newMessage: MessageObject) {\n    if (activeChatId === chatId) {\n      const otherMessages = messages\n        ? messages.filter((message) => message.created !== newMessage.created)\n        : [];\n      const newMessages = otherMessages.concat(newMessage);\n      const sortedMessages = sortMessages(newMessages);\n\n      setMessages(sortedMessages);\n      if (isChatFeedAtBottom) {\n        scrollToBottom(333, `ce-message-list-${activeChatId}`);\n      }\n    }\n    return;\n  }\n\n  async function onEditMessage(chatId: number, newMessage: MessageObject) {\n    if (chatId === activeChatId) {\n      const otherMessages = messages\n        ? messages.filter((message) => message.id !== newMessage.id)\n        : [];\n      const newMessages = [newMessage].concat(otherMessages);\n      const sortedMessages = sortMessages(newMessages);\n      setMessages(sortedMessages);\n    }\n    return;\n  }\n\n  async function onDeleteMessage(chatId: number, oldMessage: MessageObject) {\n    if (chatId === activeChatId) {\n      const newMessages = messages\n        ? messages.filter((message) => message.id !== oldMessage.id)\n        : [];\n      setMessages(newMessages);\n    }\n    return;\n  }\n\n  async function onConnect() {\n    fetchMultiChatData();\n    return;\n  }\n\n  async function onAuthFail() {}\n\n  async function onChatFormSubmit(title: string) {\n    newChat(host, headers, title, (chat) => {\n      onNewChat(chat);\n      onChatCardClick(chat.id);\n    });\n    return;\n  }\n\n  async function onChatCardClick(newActiveChatId: number) {\n    if (newActiveChatId !== activeChatId) {\n      setIsChatFeedLoading(true);\n      setIsChatSettingsLoading(true);\n    }\n\n    setActiveChatId(newActiveChatId);\n    setIsMobileChatListOpen(false);\n\n    getMessages(\n      host,\n      headers,\n      newActiveChatId,\n      messageCountIterator,\n      (chatId, messages) => {\n        onGetMessages(chatId, messages);\n        setIsChatFeedLoading(false);\n        setIsChatSettingsLoading(false);\n        scrollToBottom(0, `ce-message-list-${activeChatId}`);\n      }\n    );\n\n    getPeopleToInvite(host, headers, newActiveChatId, setPeopleToInvite);\n    return;\n  }\n\n  async function onChatLoaderShow() {\n    const now = new Date()\n      .toISOString()\n      .replace('T', ' ')\n      .replace('Z', `0000+00:00`);\n\n    getChatsBefore(\n      host,\n      headers,\n      now,\n      chatCountRef.current + chatCountIterator,\n      onGetChats\n    );\n    return;\n  }\n\n  async function onMessageFormSubmit(message: MessageObject) {\n    const newMessages = messages?.concat(message);\n    setMessages(newMessages);\n\n    newMessage(host, headers, activeChatId, message, () => {});\n\n    setTimeout(() => {\n      scrollToBottom(333, `ce-message-list-${activeChatId}`);\n    }, 100);\n    return;\n  }\n\n  async function onInvitePersonClick(person: PersonObject) {\n    activeChatId &&\n      invitePerson(host, headers, activeChatId, person.username, () =>\n        onChatCardClick(activeChatId)\n      );\n  }\n\n  async function onRemovePersonClick(person: PersonObject) {\n    activeChatId &&\n      removePerson(host, headers, activeChatId, person.username, () =>\n        onChatCardClick(activeChatId)\n      );\n    return;\n  }\n\n  async function onDeleteChatClick(chat: ChatObject) {\n    deleteChat(host, headers, chat.id, onDeleteChat);\n    return;\n  }\n\n  async function onBottomMessageShow() {\n    setIsChatFeedAtBottom(true);\n    return;\n  }\n\n  async function onBottomMessageHide() {\n    setIsChatFeedAtBottom(false);\n    return;\n  }\n\n  async function onMessageLoaderShow() {\n    const scrollContainerId = `ce-message-list-${activeChatId}`;\n    const messageListId = `ce-message-list-content-${activeChatId}`;\n\n    const currentElement = document.getElementById(messageListId);\n    let currentHeight = currentElement ? currentElement.clientHeight : 0;\n\n    activeChatId &&\n      getMessages(\n        host,\n        headers,\n        activeChatId,\n        messageCountRef.current + messageCountIterator,\n        (chatId, messages) => {\n          onGetMessages(chatId, messages);\n\n          setTimeout(() => {\n            const element = document.getElementById(messageListId);\n            if (element) {\n              animateScroll.scrollTo(element.clientHeight - currentHeight, {\n                duration: 333,\n                containerId: scrollContainerId,\n              });\n            }\n          }, 1000);\n        }\n      );\n    return;\n  }\n\n  async function onMessageLoaderHide() {\n    return;\n  }\n\n  async function onIsTyping(id: number, person: PersonObject) {\n    void id, person;\n    return;\n  }\n\n  async function onMobileChatListClick() {\n    setIsMobileChatListOpen(true);\n    return;\n  }\n\n  async function onMobileChatSettingsClick() {\n    setIsMobileChatSettingsOpen(true);\n    return;\n  }\n\n  async function onCloseMobileChatSettingsClick() {\n    setIsMobileChatSettingsOpen(false);\n    return;\n  }\n\n  return {\n    // Socket Hooks\n    onConnect,\n    onAuthFail,\n    onGetChats,\n    onNewChat,\n    onEditChat,\n    onDeleteChat,\n    onGetMessages,\n    onNewMessage,\n    onEditMessage,\n    onDeleteMessage,\n    onIsTyping,\n    // Auth Data\n    projectId,\n    username,\n    // file deepcode ignore HardcodedNonCryptoSecret: <not a secret>\n    secret,\n    httpUrl,\n    wsUrl: httpUrl && httpUrl.replace('http', 'ws'),\n    // Chat Data\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    peopleToInvite,\n    setPeopleToInvite,\n    // Chat State\n    activeChatId,\n    setActiveChatId,\n    chat,\n    hasMoreChats,\n    setHasMoreChats,\n    hasMoreMessages,\n    setHasMoreMessages,\n    isChatFeedAtBottom,\n    setIsChatFeedAtBottom,\n    isChatListLoading,\n    setIsChatListLoading,\n    isChatFeedLoading,\n    setIsChatFeedLoading,\n    isChatSettingsLoading,\n    setIsChatSettingsLoading,\n    isMobileChatListOpen,\n    setIsMobileChatListOpen,\n    isMobileChatSettingsOpen,\n    setIsMobileChatSettingsOpen,\n    // Component Hooks\n    onChatFormSubmit,\n    onChatCardClick,\n    onChatLoaderShow,\n    onMessageLoaderShow,\n    onMessageLoaderHide,\n    onBottomMessageShow,\n    onBottomMessageHide,\n    onMessageFormSubmit,\n    onInvitePersonClick,\n    onRemovePersonClick,\n    onDeleteChatClick,\n    onMobileChatListClick,\n    onMobileChatSettingsClick,\n    onCloseMobileChatSettingsClick,\n  };\n};\n","import { useState, useEffect, useRef } from 'react';\n\nimport { ChatObject, MessageObject, PersonObject } from '../interfaces';\nimport { getDateTime } from '../components/util/dateTime';\n\nimport { getChat, getMessages, newMessage } from '../actions';\n\nimport { animateScroll } from 'react-scroll';\nimport { scrollToBottom } from './shared';\nimport { ChatAuthHeaders } from '../interfaces';\n\nconst messageCountIterator = 50;\n\nexport const sortChats = (chats: ChatObject[]) => {\n  return chats.sort((a: ChatObject, b: ChatObject) => {\n    const aDate =\n      a.last_message && a.last_message.created\n        ? getDateTime(a.last_message.created)\n        : getDateTime(a.created);\n    const bDate =\n      b.last_message && b.last_message.created\n        ? getDateTime(b.last_message.created)\n        : getDateTime(b.created);\n    return new Date(bDate).getTime() - new Date(aDate).getTime();\n  });\n};\n\nexport const sortMessages = (messages: MessageObject[]) => {\n  return messages.sort((a: MessageObject, b: MessageObject) => {\n    return new Date(b.created).getTime() - new Date(a.created).getTime();\n  });\n};\n\nexport const useSingleChatLogic = (\n  projectId: string,\n  chatId: string,\n  chatAccessKey: string,\n  httpUrl?: string\n) => {\n  const host = httpUrl ? httpUrl : 'https://api.chatengine.io';\n  const headers: ChatAuthHeaders = {\n    'Public-Key': projectId,\n    'Chat-ID': chatId,\n    'Access-Key': chatAccessKey,\n  };\n\n  // Data\n  const [activeChatId, setActiveChatId] = useState<number | undefined>();\n  const [chat, setChat] = useState<ChatObject | undefined>();\n  const [messages, setMessages] = useState<MessageObject[]>([]);\n  const [peopleToInvite, setPeopleToInvite] = useState<PersonObject[]>([]);\n\n  // State\n  const [hasMoreChats, setHasMoreChats] = useState<boolean>(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState<boolean>(false);\n  const [isChatFeedAtBottom, setIsChatFeedAtBottom] = useState<boolean>(false);\n  const [isChatFeedLoading, setIsChatFeedLoading] = useState<boolean>(true);\n\n  // Subscribe to Chat & Message Count\n  const chatCountRef = useRef<number>(0);\n  chatCountRef.current = chat ? 1 : 0;\n  const messageCountRef = useRef<number>(0);\n  messageCountRef.current = messages.length;\n\n  // Fetch data on mount\n  const didMountRef = useRef<boolean>(false);\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      fetchSingleChatData();\n    }\n  }, []);\n\n  async function fetchSingleChatData() {\n    getChat(host, headers, chatId, (chat) => {\n      setChat(chat);\n      onChatCardClick(chat.id);\n    });\n  }\n\n  async function onEditChat(chat: ChatObject) {\n    setChat(chat);\n  }\n\n  async function onDeleteChat() {\n    setChat(undefined);\n    setActiveChatId(undefined);\n  }\n\n  async function onGetMessages(chatId: number, messages: MessageObject[]) {\n    setHasMoreMessages(\n      messages.length >= messageCountRef.current + messageCountIterator\n    );\n    setMessages(messages);\n    setIsChatFeedLoading(false);\n    void chatId;\n  }\n\n  async function onNewMessage(chatId: number, newMessage: MessageObject) {\n    if (activeChatId === chatId) {\n      const otherMessages = messages\n        ? messages.filter((message) => message.created !== newMessage.created)\n        : [];\n      const newMessages = otherMessages.concat(newMessage);\n      const sortedMessages = sortMessages(newMessages);\n\n      setMessages(sortedMessages);\n      if (isChatFeedAtBottom) {\n        scrollToBottom(333, `ce-message-list-${activeChatId}`);\n      }\n    }\n  }\n\n  async function onEditMessage(chatId: number, newMessage: MessageObject) {\n    if (chatId === activeChatId) {\n      const otherMessages = messages\n        ? messages.filter((message) => message.id !== newMessage.id)\n        : [];\n      const newMessages = [newMessage].concat(otherMessages);\n      const sortedMessages = sortMessages(newMessages);\n      setMessages(sortedMessages);\n    }\n  }\n\n  async function onDeleteMessage(chatId: number, oldMessage: MessageObject) {\n    if (chatId === activeChatId) {\n      const newMessages = messages\n        ? messages.filter((message) => message.id !== oldMessage.id)\n        : [];\n      setMessages(newMessages);\n    }\n  }\n\n  async function onConnect() {\n    fetchSingleChatData();\n  }\n\n  async function onAuthFail() {}\n\n  async function onChatCardClick(activeChatId: number) {\n    setActiveChatId(activeChatId);\n\n    getMessages(\n      host,\n      headers,\n      activeChatId,\n      messageCountIterator,\n      (chatId, messages) => {\n        onGetMessages(chatId, messages);\n        scrollToBottom(0, `ce-message-list-${activeChatId}`);\n      }\n    );\n  }\n\n  async function onMessageFormSubmit(message: MessageObject) {\n    const newMessages = messages?.concat(message);\n    setMessages(newMessages);\n\n    newMessage(host, headers, activeChatId, message, () => {});\n\n    setTimeout(() => {\n      scrollToBottom(333, `ce-message-list-${activeChatId}`);\n    }, 100);\n  }\n\n  async function onBottomMessageShow() {\n    setIsChatFeedAtBottom(true);\n  }\n\n  async function onBottomMessageHide() {\n    setIsChatFeedAtBottom(false);\n  }\n\n  async function onMessageLoaderShow() {\n    const scrollContainerId = `ce-message-list-${activeChatId}`;\n    const messageListId = `ce-message-list-content-${activeChatId}`;\n\n    const currentElement = document.getElementById(messageListId);\n    let currentHeight = currentElement ? currentElement.clientHeight : 0;\n\n    activeChatId &&\n      getMessages(\n        host,\n        headers,\n        activeChatId,\n        messageCountRef.current + messageCountIterator,\n        (chatId, messages) => {\n          onGetMessages(chatId, messages);\n\n          setTimeout(() => {\n            const element = document.getElementById(messageListId);\n            if (element) {\n              animateScroll.scrollTo(element.clientHeight - currentHeight, {\n                duration: 333,\n                containerId: scrollContainerId,\n              });\n            }\n          }, 1000);\n        }\n      );\n  }\n\n  async function onMessageLoaderHide() {}\n\n  async function onIsTyping(id: number, person: PersonObject) {\n    void id, person;\n  }\n\n  return {\n    // Socket Hooks\n    onConnect,\n    onAuthFail,\n    onEditChat,\n    onDeleteChat,\n    onGetMessages,\n    onNewMessage,\n    onEditMessage,\n    onDeleteMessage,\n    onIsTyping,\n    // Auth Data\n    projectId,\n    chatId,\n    chatAccessKey,\n    httpUrl,\n    wsUrl: httpUrl && httpUrl.replace('http', 'ws'),\n    // Chat Data\n    activeChatId,\n    setActiveChatId,\n    chat,\n    messages,\n    setMessages,\n    peopleToInvite,\n    setPeopleToInvite,\n    // Chat State\n    hasMoreChats,\n    setHasMoreChats,\n    hasMoreMessages,\n    setHasMoreMessages,\n    isChatFeedAtBottom,\n    setIsChatFeedAtBottom,\n    isChatFeedLoading,\n    setIsChatFeedLoading,\n    // Component Hooks\n    onChatCardClick,\n    onMessageLoaderShow,\n    onMessageLoaderHide,\n    onBottomMessageShow,\n    onBottomMessageHide,\n    onMessageFormSubmit,\n  };\n};\n","import React from 'react';\n\nimport { Props } from './props';\n\nimport { WebSocket } from 'nextjs-websocket';\n\nexport const ChildSocket: React.FC<Props> = (props: Props) => {\n  const { sessionToken } = props;\n\n  const onMessage = (event: string) => {\n    const eventJSON = JSON.parse(event);\n    if (eventJSON.action === 'new_chat') {\n      props.onNewChat && props.onNewChat(eventJSON.data);\n    } else if (\n      eventJSON.action === 'edit_chat' ||\n      eventJSON.action === 'add_person' ||\n      eventJSON.action === 'remove_person'\n    ) {\n      props.onEditChat && props.onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      props.onDeleteChat && props.onDeleteChat(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      const { id, message } = eventJSON.data;\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      const { id, message } = eventJSON.data;\n      props.onEditMessage && props.onEditMessage(id, message);\n    } else if (eventJSON.action === 'delete_message') {\n      const { id, message } = eventJSON.data;\n      props.onDeleteMessage && props.onDeleteMessage(id, message);\n    } else if (eventJSON.action === 'is_typing') {\n      const { id, person } = eventJSON.data;\n      props.onIsTyping && props.onIsTyping(id, person);\n    }\n  };\n\n  if (!sessionToken) return <div />;\n\n  const wsUrl = props.wsUrl ? props.wsUrl : 'wss://api.chatengine.io';\n\n  return (\n    <WebSocket\n      url={`${wsUrl}/person_v4/?session_token=${sessionToken}`}\n      reconnect={true}\n      reconnectIntervalInMilliSeconds={3000}\n      onOpen={props.onConnect}\n      onError={props.onError}\n      onMessage={onMessage}\n      onClose={() => {\n        props.onClose && props.onClose();\n        props.onRefresh && props.onRefresh();\n      }}\n    />\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport axios from 'axios';\n\nimport { Props } from './props';\n\nimport { ChildSocket } from './childSocket';\n\nimport { UserAuthHeaders } from '../../interfaces';\n\nconst getSessionToken = (\n  host: string,\n  headers: UserAuthHeaders,\n  callback: (token: string) => void,\n  error: () => void\n) => {\n  axios\n    .get(`${host}/users/me/session/`, { headers })\n    .then((response) => callback(response.data.token))\n    .catch(() => error());\n};\n\nexport const MultiChatSocket: React.FC<Props> = (props: Props) => {\n  const didMountRef = useRef(false);\n  const [isHidden, setIsHidden] = useState(false);\n  const [sessionToken, setToken] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n\n      const host = props.httpUrl ? props.httpUrl : 'https://api.chatengine.io';\n      const headers: UserAuthHeaders = {\n        'Public-Key': props.projectId,\n        'User-Name': props.username,\n        'User-Secret': props.secret,\n      };\n\n      getSessionToken(\n        host,\n        headers,\n        (token) => setToken(token),\n        () => {\n          console.log(\n            `Your login credentials were not correct: \\n\n              Project ID: ${props.projectId} \\n\n              Username: ${props.username} \\n\n              Secret: ${props.secret}\\n\n              Double check these credentials to make sure they're correct.\\n\n              If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n          );\n          props.onAuthFail && props.onAuthFail();\n        }\n      );\n    }\n  }, []);\n\n  async function reRender() {\n    setIsHidden(true);\n    setTimeout(() => setIsHidden(false), 100);\n  }\n\n  if (isHidden && sessionToken) return <div />;\n\n  return (\n    <ChildSocket\n      projectId={props.projectId}\n      username={props.username}\n      secret={props.secret}\n      sessionToken={sessionToken}\n      wsUrl={props.wsUrl}\n      onRefresh={reRender}\n      onConnect={props.onConnect}\n      onError={props.onError}\n      onClose={props.onClose}\n      onNewChat={props.onNewChat}\n      onEditChat={props.onEditChat}\n      onDeleteChat={props.onDeleteChat}\n      onNewMessage={props.onNewMessage}\n      onEditMessage={props.onEditMessage}\n      onDeleteMessage={props.onDeleteMessage}\n      onIsTyping={props.onIsTyping}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { Props } from './props';\n\nimport { ChildSocket } from './childSocket';\n\nexport const SingleChatSocket: React.FC<Props> = (props: Props) => {\n  const didMountRef = useRef(false);\n  const [isHidden, setIsHidden] = useState(false);\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n    }\n  }, []);\n\n  async function reRender() {\n    setIsHidden(true);\n    setTimeout(() => setIsHidden(false), 100);\n  }\n\n  if (isHidden) return <div />;\n\n  return (\n    <ChildSocket\n      projectId={props.projectId}\n      chatId={props.chatId}\n      chatAccessKey={props.chatAccessKey}\n      wsUrl={props.wsUrl}\n      onRefresh={reRender}\n      onConnect={props.onConnect}\n      onAuthFail={props.onAuthFail}\n      onError={props.onError}\n      onClose={props.onClose}\n      onEditChat={props.onEditChat}\n      onDeleteChat={props.onDeleteChat}\n      onNewMessage={props.onNewMessage}\n      onEditMessage={props.onEditMessage}\n      onDeleteMessage={props.onDeleteMessage}\n      onIsTyping={props.onIsTyping}\n    />\n  );\n};\n","import axios from 'axios';\nimport { ChatObject, UserAuthHeaders } from '../../interfaces';\n\ninterface NewChat {\n  is_direct_chat?: boolean;\n  usernames: string[];\n}\n\nexport const getOrCreateChat = (\n  host: string = 'https://api.chatengine.io',\n  headers: UserAuthHeaders,\n  data: NewChat,\n  callback: (chat: ChatObject) => void\n) => {\n  axios\n    .put(`${host}/chats/`, data, {\n      headers,\n    })\n\n    .then((response) => {\n      callback && callback(response.data);\n    })\n\n    .catch((error) => {\n      console.log('Get or Create Chat Error', error);\n    });\n};\n"],"names":["getMessages","host","headers","chatId","messageCount","callback","axios","get","then","response","data","error","console","log","newMessage","message","formdata","FormData","attachments","length","i","append","blob","file","text","created","sender_username","JSON","stringify","post","readMessage","messageId","patch","last_read","getChat","deleteChat","getChatsBefore","before","chatCount","put","newChat","title","getPeopleToInvite","invitePerson","username","removePerson","styles","position","height","overflowY","borderRight","borderLeft","top","left","right","width","maxHeight","overflowX","backgroundColor","fontFamily","textAlign","margin","paddingTop","paddingBottom","borderRadius","fontSize","fontWeight","style","color","border","outline","cursor","padding","transition","WebkitTransition","MozTransition","hoveredStyle","opacity","Button","props","type","useState","hovered","setHovered","React","onClick","className","onMouseEnter","onMouseLeave","primaryStyle","dangerStyle","children","boxSizing","focusStyle","Input","didMountRef","useRef","currentValue","setCurrentValue","focused","setFocused","useEffect","current","defaultValue","onChange","target","value","autoFocus","placeholder","label","e","onFocus","onBlur","ChatForm","selected","setSelected","setValue","renderChatForm","titleStyle","buttonStyle","onSubmit","event","preventDefault","onFormSubmit","visibility","inputStyle","colors","stringToColor","str","sum","charCodeAt","stringToNumber","backgroundRepeat","backgroundPosition","backgroundSize","lineHeight","Avatar","localAvatar","setLocalAvatar","avatarUrl","substring","toUpperCase","newAvatar","split","backgroundImage","display","undefined","isOnline","statusStyle","activeStyle","avatarStyle","whiteSpace","overflow","notificationStyle","float","subtitleStyle","bottom","timeStampStyle","loadingBarStyle","ChatCard","description","timeStamp","isLoading","hasNotificationStyle","hasNotification","renderChatCard","isActive","renderAvatar","avatarUsername","id","dangerouslySetInnerHTML","__html","RenderTrigger","ref","setIntersecting","observer","IntersectionObserver","entry","isIntersecting","onShow","onHide","observe","disconnect","useOnScreen","getDateTime","date","timezoneOffset","year","replace","substr","month","day","hour","minute","second","d","Date","setHours","getHours","formatTime","dateTime","time","toLocaleString","slice","formatDateTime","Spinner","viewBox","focusable","getDescription","chat","last_message","ChatList","activeChatId","renderChatList","onChatFormSubmit","map","_","key","chats","index","otherPerson","people","find","person","is_direct_chat","toString","some","chatPerson","readLastMessage","onChatCardClick","sender","_chat$last_message$se","avatar","hasMoreChats","onChatLoaderShow","loadingMoreChatsStyle","zIndex","setConfiguration","maxScreenClass","gutterWidth","ChatHeader","renderChatHeader","Row","Col","xs","sm","mobileOptionStyle","theirStyles","senderUsernameStyle","paddingLeft","attachmentsStyle","bodyStyle","timeTagStyle","marginLeft","bubbleStyle","overflowWrap","maxWidth","readsStyle","readStyle","myStyles","marginRight","Dot","isVisible","DateTime","offset","marginBottom","images","isImage","fileName","dotSplit","indexOf","toLowerCase","getFileName","fileUrl","slashSplit","File","url","isHovered","setIsHovered","window","open","minHeight","minWidth","objectFit","Image","loadingUrl","src","alt","Message","lastMessage","nextMessage","isSending","isMyMessage","showDateTime","topRadius","bottomRadius","borderStyle","sendingStyle","isLastMessage","renderAttachments","renderImage","attachment","attachmentsImageStyle","attachmentsFileStyle","renderMessage","dateTimeStyle","MessageList","messages","messagesObject","mapKeys","keys","Object","sort","renderMessageList","_props$chat","_props$chat2","hasMoreMessages","onMessageLoaderShow","onMessageLoaderHide","font","lastKey","nextKey","lastDate","thisDate","onBottomMessageShow","onBottomMessageHide","messageStyle","renderMessages","paddingRight","resize","sendButtonStyle","draftAttachmentStyle","draftAttachmentRemoveStyle","draftImageStyle","draftFileStyle","AttachmentInput","hoverStyle","encType","htmlFor","iconStyle","multiple","onSelectFiles","files","MessageForm","iter","setIter","setHeight","buttonHover","setButtonHover","setAttachments","textarea","document","getElementById","Math","min","scrollHeight","toISOString","floor","random","localAttachments","name","custom_json","Array","from","URL","createObjectURL","newAttachments","splice","onRemove","renderMessageForm","rows","onKeyDown","attachmentInputStyle","attachmentInputIconStyle","WelcomeGif","renderWelcomeGif","gifStyle","textStyle","ChatFeed","renderChatFeed","chatHeaderStyle","messageListStyle","onMessageFormSubmit","messageFormStyle","chatTitleStyle","oneAvatarStyle","avatarOne","twoAvatarsStyle","avatarTwo","threeAvatarsStyle","avatarThree","ChatAvatars","users","getStyle","topPeople","isDirectChat","getPeopleToRender","propsStyle","renderChatAvatars","emptyEvent","Autocomplete","showOptions","setShowOptions","addEventListener","handleClickOutside","removeEventListener","contains","closeStyle","optionsStyle","options","maxVisibleOptions","filter","option","getOptions","renderOption","renderOptions","borderTop","barStyle","barHoveredStyle","bodyExpandedStyle","Dropdown","expanded","setExpanded","transform","fill","PeopleSettings","peopleToInvite","renderPeopleSettings","is_online","usernameStyle","canDelete","onRemovePersonClick","deleteButtonStyle","onInvitePersonClick","optionStyle","addMemberStyle","addMemberInputStyle","PhotosSettings","renderPhotosSettings","imageWrapperStyle","imagePaddingStyle","imageStyle","OptionsSettings","renderOptionsSettings","onDeleteChatClick","deleteChatButtonStyle","ChatSettings","renderChatSettings","admin","peopleSettingsStyle","photosSettingsStyle","optionsSettingsStyle","pingIntervalId","timeIntervalId","scrollToBottom","duration","containerId","animateScroll","sortChats","a","b","aDate","bDate","getTime","sortMessages","ChildSocket","sessionToken","WebSocket","wsUrl","reconnect","reconnectIntervalInMilliSeconds","onOpen","onConnect","onError","onMessage","eventJSON","parse","action","onNewChat","onEditChat","onDeleteChat","onNewMessage","onEditMessage","onDeleteMessage","onIsTyping","onClose","onRefresh","socketRef","now","setNow","shouldPongBy","setShouldPongBy","projectId","chatAccessKey","clearInterval","childRef","setInterval","sendMessage","onAuthFail","isHidden","setIsHidden","setToken","setTimeout","httpUrl","Public-Key","User-Name","User-Secret","secret","token","innerWidth","isMobile","setIsMobile","isChatListLoading","isChatSettingsLoading","chatAvatarsProps","onCloseMobileChatSettingsClick","CloseOutlined","chatListColumnStyle","chatFeedColumnStyle","isChatFeedLoading","chatSettingsColumnStyle","onMobileChatListClick","chatListMobileButtonStyle","UnorderedListOutlined","isMobileChatListOpen","onMobileChatSettingsClick","chatSettingsMobileButtonStyle","SettingOutlined","isMobileChatSettingsOpen","setActiveChatId","setChats","setMessages","setPeopleToInvite","setHasMoreChats","setHasMoreMessages","isChatFeedAtBottom","setIsChatFeedAtBottom","setIsChatListLoading","setIsChatFeedLoading","setIsChatSettingsLoading","setIsMobileChatListOpen","setIsMobileChatSettingsOpen","chatCountRef","messageCountRef","fetchMultiChatData","onGetChats","currentChat","sortedChats","newChats","concat","otherChats","oldChat","onGetMessages","otherMessages","newMessages","sortedMessages","oldMessage","newActiveChatId","scrollContainerId","messageListId","currentElement","currentHeight","clientHeight","element","scrollTo","Chat-ID","Access-Key","setChat","fetchSingleChatData"],"mappings":"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"}